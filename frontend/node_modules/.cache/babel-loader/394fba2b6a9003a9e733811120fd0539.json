{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/FilterDialogNewVer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@mui/styles';\nimport { Dialog, Grid, Typography } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { Form, Formik } from 'formik';\nimport { addDays } from 'date-fns';\nimport { categoryOptionsMap } from '../resources/constants.jsx';\nimport DialogHeaderNew from './DialogHeaderNew';\nimport FormElement from '../form/FormElement.jsx';\nimport AppButton from '../components/AppButton.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  applyButton: {\n    backgroundColor: `${theme.palette.background.lightGrey} !important`,\n    paddingLeft: theme.spacing(2),\n    minHeight: theme.spacing(5),\n    width: '100% !important',\n    '&:hover': {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n      color: `${theme.palette.common.white} !important`\n    }\n  },\n  applyButtonBackground: {\n    padding: theme.spacing(2),\n    boxShadow: `0px 0px 3px ${theme.palette.background.lightGrey}`,\n    position: \"fixed\",\n    backgroundColor: theme.palette.common.white,\n    bottom: 0\n  },\n  my10: {\n    marginTop: theme.spacing(10),\n    marginBottom: theme.spacing(8)\n  },\n  px2: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  pb3: {\n    paddingBottom: theme.spacing(3)\n  },\n  headings: {\n    fontWeight: `600 !important`\n  },\n  button: {\n    fontWeight: `${400} !important`,\n    color: `${theme.palette.text.secondary} !important`,\n    right: theme.spacing(1),\n    marginTop: `${theme.spacing(1)} !important`\n  }\n}));\n\nfunction FilterDialogNewVer(_ref) {\n  _s();\n\n  let {\n    open,\n    handleClose,\n    versionId\n  } = _ref;\n  const classes = useStyles();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [showAllLocations, setShowAllLocations] = useState(false);\n  const [showAllSports, setShowAllSports] = useState(false);\n  const allLocationsNew = ['Ang Mo Kio', 'Bishan', 'Clementi', 'Hougang', 'Jurong East', 'Pasir Ris', 'Punggol', 'Sengkang', 'Woodlands', 'Yio Chu Kang'];\n  const initialValues = {\n    Availability: true,\n    Location: [],\n    // allLocationsNew,\n    Sports: [],\n    // categoryOptionsMap.Sport,\n    dateRange: [{\n      startDate: new Date(),\n      endDate: addDays(new Date(), 14),\n      key: 'selection'\n    }]\n  };\n\n  const applyFilter = values => {\n    console.log('Filter:', values);\n    handleClose();\n    navigate(`/facilities/result?version=${versionId}&query=${JSON.stringify(values)}`);\n  };\n\n  const renderCheckboxRow = (title, value) => {\n    return /*#__PURE__*/_jsxDEV(FormElement, {\n      type: \"checkbox\",\n      title: title,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  };\n\n  const renderCheckboxShow = (list, title) => {\n    return list.map(item => renderCheckboxRow(title, item));\n  };\n\n  const renderCheckboxHide = (list, title) => {\n    const top3 = list.slice(0, 3);\n    return top3.map(item => renderCheckboxRow(title, item));\n  };\n\n  const toggleShowAll = title => {\n    if (title === 'Location') {\n      setShowAllLocations(!showAllLocations);\n    } else if (title === 'Sports') {\n      setShowAllSports(!showAllSports);\n    }\n  };\n\n  const renderShowOrHideButton = (type, title) => {\n    return /*#__PURE__*/_jsxDEV(AppButton, {\n      variant: \"text\",\n      content: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: `${type} all ${title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 26\n      }, this),\n      endIcon: type === 'Show' ? /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 72\n      }, this),\n      className: classes.button,\n      onClick: () => toggleShowAll(title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderCheckboxSection = (id, title, list) => {\n    const isShowAll = {\n      'Location': showAllLocations,\n      'Sports': showAllSports\n    };\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      className: classes.pb3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        id: id,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.headings,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        role: \"group\",\n        \"aria-labelledby\": id,\n        children: [isShowAll[title] ? renderCheckboxShow(list, title) : renderCheckboxHide(list, title), isShowAll[title] ? renderShowOrHideButton('Hide', title) : renderShowOrHideButton('Show', title)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderForm = formikBag => {\n    const {\n      touched,\n      errors,\n      values,\n      setFieldValue\n    } = formikBag;\n    console.log('Formik', values);\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.px2,\n        children: [/*#__PURE__*/_jsxDEV(FormElement, {\n          type: \"toggle\",\n          toggle: values.Availability,\n          header: \"Availability\",\n          subheader: \"Show only available locations\",\n          handleToggle: (e, r) => setFieldValue('Availability', r)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), renderCheckboxSection(\"checkbox-group-location\", 'Location', allLocationsNew), renderCheckboxSection(\"checkbox-group-sport\", 'Sports', categoryOptionsMap.Sport), /*#__PURE__*/_jsxDEV(FormElement, {\n          type: \"date\",\n          ranges: values.dateRange,\n          onDateChange: item => setFieldValue('dateRange', [item.selection])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        className: classes.applyButtonBackground,\n        children: /*#__PURE__*/_jsxDEV(AppButton, {\n          variant: \"filled\",\n          content: \"Apply\",\n          type: \"submit\",\n          className: classes.applyButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogHeaderNew, {\n      header: \"Filter\",\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.my10,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: applyFilter,\n        children: formikBag => renderForm(formikBag)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterDialogNewVer, \"CgLihLOwIKgMsUcmRo4mzw0Qvn0=\", false, function () {\n  return [useStyles, useTheme, useNavigate];\n});\n\n_c = FilterDialogNewVer;\nexport default FilterDialogNewVer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterDialogNewVer\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/FilterDialogNewVer.jsx"],"names":["React","useEffect","useState","useNavigate","makeStyles","useTheme","Dialog","Grid","Typography","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Form","Formik","addDays","categoryOptionsMap","DialogHeaderNew","FormElement","AppButton","useStyles","theme","applyButton","backgroundColor","palette","background","lightGrey","paddingLeft","spacing","minHeight","width","primary","main","color","common","white","applyButtonBackground","padding","boxShadow","position","bottom","my10","marginTop","marginBottom","px2","paddingRight","pb3","paddingBottom","headings","fontWeight","button","text","secondary","right","FilterDialogNewVer","open","handleClose","versionId","classes","navigate","showAllLocations","setShowAllLocations","showAllSports","setShowAllSports","allLocationsNew","initialValues","Availability","Location","Sports","dateRange","startDate","Date","endDate","key","applyFilter","values","console","log","JSON","stringify","renderCheckboxRow","title","value","renderCheckboxShow","list","map","item","renderCheckboxHide","top3","slice","toggleShowAll","renderShowOrHideButton","type","renderCheckboxSection","id","isShowAll","renderForm","formikBag","touched","errors","setFieldValue","e","r","Sport","selection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@mui/styles';\nimport { Dialog, Grid, Typography } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { Form, Formik } from 'formik';\nimport { addDays } from 'date-fns';\nimport { categoryOptionsMap } from '../resources/constants.jsx';\nimport DialogHeaderNew from './DialogHeaderNew';\nimport FormElement from '../form/FormElement.jsx';\nimport AppButton from '../components/AppButton.jsx';\n\nconst useStyles = makeStyles(theme => ({\n    applyButton: {\n        backgroundColor: `${theme.palette.background.lightGrey} !important`,\n        paddingLeft: theme.spacing(2),\n        minHeight: theme.spacing(5),\n        width: '100% !important',\n        '&:hover': {\n            backgroundColor: `${theme.palette.primary.main} !important`,\n            color: `${theme.palette.common.white} !important`,\n        },\n    },\n    applyButtonBackground: {\n        padding: theme.spacing(2),\n        boxShadow: `0px 0px 3px ${theme.palette.background.lightGrey}`,\n        position: \"fixed\",\n        backgroundColor: theme.palette.common.white,\n        bottom: 0\n    },\n    my10: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(8)\n    },\n    px2: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    }, \n    pb3: {\n        paddingBottom: theme.spacing(3)\n    },\n    headings: {\n        fontWeight: `600 !important`\n    },\n    button: {\n        fontWeight: `${400} !important`,\n        color: `${theme.palette.text.secondary} !important`,\n        right: theme.spacing(1),\n        marginTop: `${theme.spacing(1)} !important`,\n    }\n}));\n\nfunction FilterDialogNewVer({ open, handleClose, versionId }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const [showAllLocations, setShowAllLocations] = useState(false);\n    const [showAllSports, setShowAllSports] = useState(false);\n\n    const allLocationsNew = [\n        'Ang Mo Kio', 'Bishan', 'Clementi', 'Hougang', 'Jurong East', 'Pasir Ris', 'Punggol', 'Sengkang', 'Woodlands', 'Yio Chu Kang'\n    ];\n\n    const initialValues = { \n        Availability: true,\n        Location: [], // allLocationsNew,\n        Sports: [], // categoryOptionsMap.Sport,\n        dateRange: [{\n            startDate: new Date(),\n            endDate: addDays(new Date(), 14),\n            key: 'selection'\n        }]\n    };\n\n    const applyFilter = (values) => {\n        console.log('Filter:', values);\n        handleClose();\n        navigate(`/facilities/result?version=${versionId}&query=${JSON.stringify(values)}`);\n    };\n\n    const renderCheckboxRow = (title, value) => {\n        return <FormElement type=\"checkbox\" title={title} value={value} />\n    }\n\n    const renderCheckboxShow = (list, title) => {\n        return list.map(item => renderCheckboxRow(title, item));\n    };\n\n    const renderCheckboxHide = (list, title) => {\n        const top3 = list.slice(0, 3);\n        return top3.map(item => renderCheckboxRow(title, item));\n    };\n\n    const toggleShowAll = title => {\n        if (title === 'Location') {\n            setShowAllLocations(!showAllLocations);\n        } else if (title === 'Sports') {\n            setShowAllSports(!showAllSports);\n        }\n    };\n\n    const renderShowOrHideButton = (type, title) => {\n        return (\n            <AppButton \n                variant='text' \n                content={<Typography variant='h4'>{`${type} all ${title}`}</Typography>} \n                endIcon={type === 'Show' ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\n                className={classes.button}\n                onClick={() => toggleShowAll(title)}\n            />\n        );\n    };\n\n    const renderCheckboxSection = (id, title, list) => {\n        const isShowAll = {\n            'Location': showAllLocations,\n            'Sports': showAllSports\n        };\n        return (\n            <Grid container item className={classes.pb3}>\n                <Grid item xs={12} id={id}>\n                    <Typography variant='h2' className={classes.headings}>{title}</Typography>\n                </Grid>\n                <Grid container item role=\"group\" aria-labelledby={id}>\n                    {isShowAll[title] ? (\n                        renderCheckboxShow(list, title)\n                    ) : (\n                        renderCheckboxHide(list, title)\n                    )}\n                    {isShowAll[title] ? (\n                        renderShowOrHideButton('Hide', title)\n                    ) : (\n                        renderShowOrHideButton('Show', title)\n                    )}\n                </Grid>\n            </Grid>\n        );\n    };\n\n    const renderForm = formikBag => {\n        const { touched, errors, values, setFieldValue } = formikBag;\n        console.log('Formik', values);\n        return (\n            <Form>\n                <Grid container justify=\"flex-start\" alignItems=\"flex-start\" className={classes.px2}>\n                    <FormElement \n                        type=\"toggle\" \n                        toggle={values.Availability} \n                        header='Availability'\n                        subheader='Show only available locations'\n                        handleToggle={(e, r) => setFieldValue('Availability', r)} \n                    />\n                    {renderCheckboxSection(\"checkbox-group-location\", 'Location', allLocationsNew)}\n                    {renderCheckboxSection(\"checkbox-group-sport\", 'Sports', categoryOptionsMap.Sport)}\n                    <FormElement \n                        type=\"date\" \n                        ranges={values.dateRange}\n                        onDateChange={item => setFieldValue('dateRange', [item.selection])}\n                    />\n                </Grid>\n                <Grid container item justifyContent=\"center\" alignItems=\"center\" className={classes.applyButtonBackground}>\n                    <AppButton \n                        variant='filled' \n                        content=\"Apply\" \n                        type=\"submit\" \n                        className={classes.applyButton}\n                    />\n                </Grid>\n            </Form>\n        );\n    }\n\n    return (\n        <Dialog\n            fullScreen\n            open={open}\n            onClose={handleClose}\n        >\n            <DialogHeaderNew header='Filter' handleClose={handleClose} />\n            <Grid container className={classes.my10}>\n                <Formik initialValues={initialValues} onSubmit={applyFilter}> \n                    {formikBag => renderForm(formikBag)}\n                </Formik>\n            </Grid>\n      </Dialog>\n    );\n}\n\nexport default FilterDialogNewVer;\n"]},"metadata":{},"sourceType":"module"}