{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/CategoryOptionsDialogNewVer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles, useTheme } from '@mui/styles';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Dialog, Grid } from '@mui/material';\nimport { categoryOptionsMap } from '../resources/constants.jsx';\nimport DialogHeaderNew from '../components/DialogHeaderNew';\nimport SearchListNewVer from '../components/SearchListNewVer';\nimport SearchBarNewVer from './SearchBarNewVer.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  mt10: {\n    marginTop: theme.spacing(10)\n  }\n}));\n\nfunction CategoryOptionsDialogNewVer(_ref) {\n  _s();\n\n  let {\n    category,\n    list,\n    doSearch,\n    open,\n    handleClose,\n    hasSearchValues,\n    updateHasSearchValues,\n    updateSearchOptions,\n    resetSearchInput\n  } = _ref;\n  const classes = useStyles();\n  const theme = useTheme();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchInput = useRef(null);\n  useEffect(() => {}, [list]);\n\n  const handleCloseDialog = () => {\n    resetSearchInput();\n    handleClose();\n  };\n\n  const doRecentSearch = item => {\n    doSearch(item);\n    searchInput.current.value = item;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogHeaderNew, {\n      header: category,\n      handleClose: handleCloseDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.mt10,\n      children: [/*#__PURE__*/_jsxDEV(SearchBarNewVer, {\n        type: category,\n        showFilter: false,\n        doSearch: doSearch,\n        searchInput: searchInput,\n        hasSearchValues: hasSearchValues,\n        updateHasSearchValues: updateHasSearchValues,\n        resetSearchInput: resetSearchInput,\n        updateSearchOptions: updateSearchOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchListNewVer, {\n        list: list,\n        search: doRecentSearch,\n        fullScreen: true,\n        type: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CategoryOptionsDialogNewVer, \"RUMoKQrvEn/tqmgCg/YcyxL8agU=\", false, function () {\n  return [useStyles, useTheme, useLocation, useNavigate];\n});\n\n_c = CategoryOptionsDialogNewVer;\nexport default CategoryOptionsDialogNewVer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryOptionsDialogNewVer\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/CategoryOptionsDialogNewVer.jsx"],"names":["React","useEffect","useRef","useState","makeStyles","useTheme","useNavigate","useLocation","Dialog","Grid","categoryOptionsMap","DialogHeaderNew","SearchListNewVer","SearchBarNewVer","useStyles","theme","mt10","marginTop","spacing","CategoryOptionsDialogNewVer","category","list","doSearch","open","handleClose","hasSearchValues","updateHasSearchValues","updateSearchOptions","resetSearchInput","classes","location","navigate","searchInput","handleCloseDialog","doRecentSearch","item","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,aAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,eAA7B;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,EAAd;AADT;AAD6B,CAAL,CAAN,CAA5B;;AAMA,SAASC,2BAAT,OAAqK;AAAA;;AAAA,MAAhI;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA,eAA/C;AAAgEC,IAAAA,qBAAhE;AAAuFC,IAAAA,mBAAvF;AAA4GC,IAAAA;AAA5G,GAAgI;AACjK,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAMyB,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM0B,WAAW,GAAG9B,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACoB,IAAD,CAFM,CAAT;;AAKA,QAAMY,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,gBAAgB;AAChBJ,IAAAA,WAAW;AACd,GAHD;;AAKA,QAAMU,cAAc,GAAGC,IAAI,IAAI;AAC3Bb,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACAH,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4BF,IAA5B;AACH,GAHD;;AAKA,sBACI,QAAC,MAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,IAAI,EAAEZ,IAFV;AAGI,IAAA,OAAO,EAAEC,WAHb;AAAA,4BAKI,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEJ,QAAzB;AAAmC,MAAA,WAAW,EAAEa;AAAhD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEJ,OAAO,CAACb,IAAnC;AAAA,8BACI,QAAC,eAAD;AACI,QAAA,IAAI,EAAEI,QADV;AAEI,QAAA,UAAU,EAAE,KAFhB;AAGI,QAAA,QAAQ,EAAEE,QAHd;AAII,QAAA,WAAW,EAAEU,WAJjB;AAKI,QAAA,eAAe,EAAEP,eALrB;AAMI,QAAA,qBAAqB,EAAEC,qBAN3B;AAOI,QAAA,gBAAgB,EAAEE,gBAPtB;AAQI,QAAA,mBAAmB,EAAED;AARzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEN,IAAxB;AAA8B,QAAA,MAAM,EAAEa,cAAtC;AAAsD,QAAA,UAAU,MAAhE;AAAiE,QAAA,IAAI,EAAEd;AAAvE;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA5CQD,2B;UACWL,S,EACFT,Q,EACGE,W,EACAD,W;;;KAJZa,2B;AA8CT,eAAeA,2BAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles, useTheme } from '@mui/styles';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Dialog, Grid } from '@mui/material';\nimport { categoryOptionsMap } from '../resources/constants.jsx';\nimport DialogHeaderNew from '../components/DialogHeaderNew';\nimport SearchListNewVer from '../components/SearchListNewVer';\nimport SearchBarNewVer from './SearchBarNewVer.jsx';\n\nconst useStyles = makeStyles(theme => ({\n    mt10: {\n        marginTop: theme.spacing(10)\n    }\n}));\n\nfunction CategoryOptionsDialogNewVer({ category, list, doSearch, open, handleClose, hasSearchValues, updateHasSearchValues, updateSearchOptions, resetSearchInput }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const searchInput = useRef(null);    \n\n    useEffect(() => {\n        \n    }, [list]);\n\n\n    const handleCloseDialog = () => {\n        resetSearchInput();\n        handleClose();\n    };\n\n    const doRecentSearch = item => {\n        doSearch(item);\n        searchInput.current.value = item;\n    };\n\n    return (\n        <Dialog\n            fullScreen\n            open={open}\n            onClose={handleClose}\n        >\n            <DialogHeaderNew header={category} handleClose={handleCloseDialog} />\n            <Grid container className={classes.mt10}>\n                <SearchBarNewVer \n                    type={category}\n                    showFilter={false} \n                    doSearch={doSearch} \n                    searchInput={searchInput}\n                    hasSearchValues={hasSearchValues}\n                    updateHasSearchValues={updateHasSearchValues}\n                    resetSearchInput={resetSearchInput}\n                    updateSearchOptions={updateSearchOptions}\n                />\n                <SearchListNewVer list={list} search={doRecentSearch} fullScreen type={category} /> \n            </Grid>\n      </Dialog>\n    );\n}\n\nexport default CategoryOptionsDialogNewVer;\n"]},"metadata":{},"sourceType":"module"}