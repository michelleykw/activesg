{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/YouMayAlsoLike.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport data from './data/data.json';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ScrollCalendarCardOld from '../components/CalendarCardOld';\nimport ScrollCalendarCardNew from '../components/CalendarCardNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction YouMayAlsoLike(_ref) {\n  _s();\n\n  let {\n    currFacilityName,\n    useOldResult,\n    selectedDate,\n    setSelectedDate,\n    setSelectedTime,\n    dates\n  } = _ref;\n  const [randomFac, setRandomFac] = useState([]);\n  useEffect(() => {\n    const removeCurr = data.filter(data => data.name != currFacilityName);\n    const rand = removeCurr[Math.floor(Math.random() * removeCurr.length)];\n    setRandomFac(rand);\n    console.log(randomFac);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    sx: {\n      ml: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 1\n      },\n      children: !useOldResult && /*#__PURE__*/_jsxDEV(Typography, {\n        inline: true,\n        align: \"left\",\n        gutterBottom: true,\n        variant: \"h6\",\n        sx: {\n          fontWeight: 600\n        },\n        children: \"You may also like this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"flex-start\",\n      justifyContent: \"flex-start\",\n      maxHeight: \"90px\",\n      children: [useOldResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ScrollCalendarCardOld, {\n          date: '14 April',\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          setSelectedTime: setSelectedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), dates.map(item => /*#__PURE__*/_jsxDEV(ScrollCalendarCardOld, {\n          date: item.date,\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          setSelectedTime: setSelectedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 40\n        }, this))]\n      }, void 0, true), !useOldResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ScrollCalendarCardNew, {\n          date: '14 April',\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          setSelectedTime: setSelectedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), dates.map(item => /*#__PURE__*/_jsxDEV(ScrollCalendarCardNew, {\n          date: item.date,\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          setSelectedTime: setSelectedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 40\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YouMayAlsoLike, \"fuF4aV2qVLxbnzhnP70i7DgoC5E=\");\n\n_c = YouMayAlsoLike;\nexport default YouMayAlsoLike;\n\nvar _c;\n\n$RefreshReg$(_c, \"YouMayAlsoLike\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/YouMayAlsoLike.jsx"],"names":["React","useEffect","useState","data","Grid","Box","Typography","ScrollCalendarCardOld","ScrollCalendarCardNew","YouMayAlsoLike","currFacilityName","useOldResult","selectedDate","setSelectedDate","setSelectedTime","dates","randomFac","setRandomFac","removeCurr","filter","name","rand","Math","floor","random","length","console","log","ml","mt","fontWeight","map","item","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport data from './data/data.json';\n\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ScrollCalendarCardOld from '../components/CalendarCardOld';\nimport ScrollCalendarCardNew from '../components/CalendarCardNew';\n\nfunction YouMayAlsoLike({currFacilityName, useOldResult, selectedDate, setSelectedDate, setSelectedTime, dates}) {\n\n    const [randomFac, setRandomFac] = useState([]);\n\n    useEffect(() => {\n        const removeCurr = data.filter(data => data.name != currFacilityName);\n        const rand = removeCurr[Math.floor(Math.random() * removeCurr.length)];\n        setRandomFac(rand);\n        console.log(randomFac);\n    })\n\n    return (\n        <Grid container direction=\"column\" sx={{ml: 2}}>\n            <Box sx={{mt: 1}}>\n                {!useOldResult && (\n                    <Typography inline align=\"left\" gutterBottom variant=\"h6\" sx={{fontWeight: 600}}>\n                        You may also like this\n                    </Typography>\n                )}\n            </Box>\n\n            <Grid container direction=\"row\" alignItems=\"flex-start\" justifyContent=\"flex-start\" maxHeight='90px'>\n                {useOldResult &&  (\n                    <>\n                    <ScrollCalendarCardOld date={'14 April'} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime}/>\n                    {dates.map(item => <ScrollCalendarCardOld date={item.date} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime} />)}\n                    </>\n                )}\n\n                {!useOldResult &&  (\n                    <>\n                    <ScrollCalendarCardNew date={'14 April'} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime}/>\n                    {dates.map(item => <ScrollCalendarCardNew date={item.date} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime} />)}\n                    </>\n                )}\n\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default YouMayAlsoLike;"]},"metadata":{},"sourceType":"module"}