{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/TimeSlotCard.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { sendNetworkLog } from '../logging/logging.js';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TimeSlotCards(_ref) {\n  let {\n    dataArr,\n    selectedTime,\n    setSelectedTime\n  } = _ref;\n  const time = moment(Object.keys(dataArr), 'hh:mm a').format('hh:mm a');\n  const availability = Object.values(dataArr);\n\n  const handleTimeSlotClick = selectedTimeSlot => {\n    if (selectedTime === '' || selectedTime != time) {\n      setSelectedTime(selectedTimeSlot);\n    } else {\n      setSelectedTime('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        padding: '12px',\n        justifyContent: 'center'\n      },\n      style: {\n        boxShadow: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderColor: 'error.main',\n          borderRadius: 2,\n          padding: '8px',\n          backgroundColor: selectedTime === time ? 'error.main' : 'white',\n          color: selectedTime === time ? 'white' : 'black'\n        },\n        border: 1,\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => handleTimeSlotClick(time),\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              padding: '0',\n              justifyItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justify: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: [availability, \" left\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = TimeSlotCards;\nexport default TimeSlotCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSlotCards\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/TimeSlotCard.jsx"],"names":["React","useEffect","useState","moment","sendNetworkLog","Grid","Typography","Box","Card","CardContent","CardActionArea","TimeSlotCards","dataArr","selectedTime","setSelectedTime","time","Object","keys","format","availability","values","handleTimeSlotClick","selectedTimeSlot","padding","justifyContent","boxShadow","borderColor","borderRadius","backgroundColor","color","justifyItems"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAEA,SAASC,aAAT,OAAkE;AAAA,MAA1C;AAACC,IAAAA,OAAD;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,GAA0C;AAC9D,QAAMC,IAAI,GAAGZ,MAAM,CAACa,MAAM,CAACC,IAAP,CAAYL,OAAZ,CAAD,EAAuB,SAAvB,CAAN,CAAwCM,MAAxC,CAA+C,SAA/C,CAAb;AACA,QAAMC,YAAY,GAAGH,MAAM,CAACI,MAAP,CAAcR,OAAd,CAArB;;AAEA,QAAMS,mBAAmB,GAAIC,gBAAD,IAAsB;AAC9C,QAAIT,YAAY,KAAK,EAAjB,IAAuBA,YAAY,IAAIE,IAA3C,EAAiD;AAC7CD,MAAAA,eAAe,CAACQ,gBAAD,CAAf;AACH,KAFD,MAEO;AACHR,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAACS,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAV;AAAuD,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA9D;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AACLC,UAAAA,WAAW,EAAE,YADR;AAELC,UAAAA,YAAY,EAAE,CAFT;AAGLJ,UAAAA,OAAO,EAAE,KAHJ;AAILK,UAAAA,eAAe,EAAEf,YAAY,KAAKE,IAAjB,GAAwB,YAAxB,GAAuC,OAJnD;AAKLc,UAAAA,KAAK,EAAEhB,YAAY,KAAKE,IAAjB,GAAwB,OAAxB,GAAkC;AALpC,SAAT;AAKwD,QAAA,MAAM,EAAE,CALhE;AAAA,+BAMI,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAE,MAAMM,mBAAmB,CAACN,IAAD,CAAlD;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,EAAE,EAAE;AAACQ,cAAAA,OAAO,EAAE,GAAV;AAAeO,cAAAA,YAAY,EAAC;AAA5B,aAAjB;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,SAAS,EAAC,QAA1B;AAAmC,cAAA,OAAO,EAAC,QAA3C;AAAoD,cAAA,UAAU,EAAC,QAA/D;AAAA,sCACI,QAAC,UAAD;AAAA,0BAAaf;AAAb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,SAApB;AAAA,2BAA+BI,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqBH;;KAjCQR,a;AAmCT,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport { sendNetworkLog } from '../logging/logging.js';\n\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\n\nfunction TimeSlotCards ({dataArr, selectedTime, setSelectedTime}) {\n    const time = moment(Object.keys(dataArr), 'hh:mm a').format('hh:mm a');\n    const availability = Object.values(dataArr);\n\n    const handleTimeSlotClick = (selectedTimeSlot) => {\n        if (selectedTime === '' || selectedTime != time) {\n            setSelectedTime(selectedTimeSlot);\n        } else {\n            setSelectedTime('');\n        }\n    }\n\n    return (\n        <>\n            <Card sx={{padding: '12px', justifyContent: 'center'}} style={{ boxShadow: \"none\" }}>\n                <Box sx={{\n                    borderColor: 'error.main',\n                    borderRadius: 2,\n                    padding: '8px',\n                    backgroundColor: selectedTime === time ? 'error.main' : 'white',\n                    color: selectedTime === time ? 'white' : 'black',}} border={1}>\n                    <CardActionArea onClick={() => handleTimeSlotClick(time)}>\n                        <CardContent sx={{padding: '0', justifyItems:'center'}}>\n                            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                                <Typography>{time}</Typography>\n                                <Typography variant='caption'>{availability} left</Typography>\n                            </Grid>\n                        </CardContent>\n                    </CardActionArea>\n                </Box>\n            </Card>\n        </>\n    )\n}\n\nexport default TimeSlotCards;"]},"metadata":{},"sourceType":"module"}