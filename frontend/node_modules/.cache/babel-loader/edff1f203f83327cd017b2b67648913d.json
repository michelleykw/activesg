{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilitiesPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport SportsSoccerIcon from '@mui/icons-material/SportsSoccer';\nimport SearchPageOldVer from './SearchPageOldVer';\nimport SearchPageNewVer from './SearchPageNewVer';\nimport AppIconButton from '../components/AppIconButton.jsx';\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport SearchBarNewVer from '../components/SearchBarNewVer.jsx';\nimport FilterDialogNewVer from '../components/FilterDialogNewVer.jsx';\nimport CategoryOptionsDialogNewVer from '../components/CategoryOptionsDialogNewVer';\nimport { allSearchOptions, categoryOptionsMap } from '../resources/constants.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    // minHeight: 'calc(100vh - 56px)',\n    paddingTop: theme.spacing(2)\n  },\n  textAlignCenter: {\n    textAlign: 'center'\n  },\n  mHalf: {\n    margin: theme.spacing(0.5)\n  },\n  py4: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  p4: {\n    padding: theme.spacing(4)\n  },\n  pt1: {\n    paddingTop: theme.spacing(1)\n  }\n}));\n\nfunction FacilitiesPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const searchInputNew = useRef(null);\n  const isOldVersion = versionId == 1 || versionId == 2;\n  const LOCATION_TITLE = 'Location';\n  const SPORT_TITLE = 'Sport';\n  const [openSportDialog, setOpenSportDialog] = useState(false); // NEW VERSION\n\n  const [openLocationDialog, setOpenLocationDialog] = useState(false); // NEW VERSION\n\n  const [openFilterDialog, setOpenFilterDialog] = useState(false); // NEW VERSION\n\n  let listOptions = allSearchOptions;\n\n  if (openSportDialog) {\n    listOptions = categoryOptionsMap[SPORT_TITLE];\n  } else if (openLocationDialog) {\n    listOptions = categoryOptionsMap[LOCATION_TITLE];\n  }\n\n  const [openPage, setOpenPage] = useState(false);\n  const [hasSearchValues, setHasSearchValues] = useState(false);\n  const [options, setOptions] = useState(listOptions);\n  const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n  useEffect(() => {\n    if (window.localStorage.getItem('recentSearchList') === null) {\n      window.localStorage.setItem('recentSearchList', JSON.stringify([]));\n    }\n\n    if (openFilterDialog && openPage) {\n      setOpenPage(false);\n    }\n  }, [recentSearchList, options, openFilterDialog, openPage]);\n\n  const goToSearchResultPage = searchInput => {\n    navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n  };\n\n  const resetSearchInput = () => {\n    setHasSearchValues(false);\n    setOptions(listOptions);\n  };\n\n  const updateRecentSearch = newSearch => {\n    if (newSearch.length > 0) {\n      updateHasSearchValues(newSearch);\n      const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n\n      if (!recentSearchList.includes(newSearch)) {\n        recentSearchList.unshift(newSearch);\n      } else if (recentSearchList.includes(newSearch)) {\n        const index = recentSearchList.indexOf(newSearch);\n        recentSearchList.splice(index, 1);\n        recentSearchList.unshift(newSearch);\n      }\n\n      window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n      setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    }\n  };\n\n  const doSearch = input => {\n    updateSearchOptions(input);\n    updateRecentSearch(input);\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    goToSearchResultPage(input);\n  };\n\n  const removeRecentSearch = item => {\n    const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n    const newRecentSearchList = recentSearchList.filter(e => e != item);\n    window.localStorage.setItem('recentSearchList', JSON.stringify(newRecentSearchList));\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    updateHasSearchValues(false);\n  };\n\n  const updateHasSearchValues = input => {\n    setHasSearchValues(input && input.length > 0);\n  };\n\n  const updateSearchOptions = searchInput => {\n    if (listOptions && listOptions[0] && typeof listOptions[0] === 'string') {\n      setOptions(listOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n    } else {\n      const newListOptions = [];\n      listOptions.map(item => {\n        var _item$facilities;\n\n        const result = item === null || item === void 0 ? void 0 : (_item$facilities = item.facilities) === null || _item$facilities === void 0 ? void 0 : _item$facilities.filter(f => f.toLowerCase().includes(searchInput.toLowerCase()));\n\n        if (result.length > 0) {\n          newListOptions.push({\n            area: item.area,\n            facilities: result\n          });\n        }\n      });\n      setOptions(newListOptions);\n    }\n  };\n\n  const openSearchPage = () => {\n    setOpenPage(true);\n  };\n\n  const closeSearchPage = () => {\n    resetSearchInput();\n    setOpenPage(false);\n  };\n  /* OLD VERSION OF FACILITIES PAGE (1 & 2) */\n\n\n  if (isOldVersion) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"flex-start\",\n      justifyContent: \"center\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(SearchBarOldVer, {\n        startSearch: openSearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchPageOldVer, {\n        openPage: openPage,\n        cancelSearch: closeSearchPage,\n        isOldVersion: isOldVersion,\n        recentSearchList: recentSearchList,\n        resetSearchInput: resetSearchInput,\n        doSearch: doSearch,\n        removeRecentSearch: removeRecentSearch,\n        hasSearchValues: hasSearchValues,\n        updateHasSearchValues: updateHasSearchValues,\n        searchOptions: options,\n        updateSearchOptions: updateSearchOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  /* NEW VERSION OF FACILITIES PAGE (3 & 4) */\n\n  const doOpenCategoryDialog = type => {\n    if (type == SPORT_TITLE) {\n      setOpenSportDialog(true);\n      setOptions(categoryOptionsMap[SPORT_TITLE]);\n    } else if (type == LOCATION_TITLE) {\n      setOpenLocationDialog(true);\n      setOptions(categoryOptionsMap[LOCATION_TITLE]);\n    }\n  };\n\n  const closeCategoryDialog = type => {\n    setOptions(allSearchOptions);\n\n    if (openSportDialog) {\n      setOpenSportDialog(false);\n    } else if (openLocationDialog) {\n      setOpenLocationDialog(false);\n    }\n  };\n\n  const doOpenFilterDialog = type => {\n    setOpenFilterDialog(true);\n    setOpenPage(false);\n  };\n\n  const closeFilterDialog = type => {\n    setOpenFilterDialog(false);\n  };\n\n  const renderHeaderNew = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: `${classes.textAlignCenter} ${classes.py4}`,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        color: \"textSecondary\",\n        children: \"Hi, User.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        className: classes.pt1,\n        children: \"What would you like to do today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderSearchNew = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: `${classes.textAlignCenter}`,\n      children: [/*#__PURE__*/_jsxDEV(SearchBarNewVer, {\n        startSearch: openSearchPage,\n        closeFilterDialog: closeFilterDialog,\n        openFilterDialog: doOpenFilterDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchPageNewVer, {\n        openPage: openPage,\n        handleClosePage: closeSearchPage,\n        recentSearchList: recentSearchList,\n        resetSearchInput: resetSearchInput,\n        doSearch: doSearch,\n        removeRecentSearch: removeRecentSearch,\n        hasSearchValues: hasSearchValues,\n        updateHasSearchValues: updateHasSearchValues,\n        searchOptions: options,\n        updateSearchOptions: updateSearchOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderCategoryButton = (name, icon) => {\n    return /*#__PURE__*/_jsxDEV(AppIconButton, {\n      onClick: () => {\n        doOpenCategoryDialog(name);\n      },\n      name: name,\n      icon: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 16\n    }, this);\n  };\n\n  const renderCategoryButtons = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      justifyContent: \"space-evenly\",\n      xs: 12,\n      className: `${classes.p4}`,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: renderCategoryButton(LOCATION_TITLE, /*#__PURE__*/_jsxDEV(LocationOnIcon, {\n          fontSize: \"large\",\n          className: classes.mHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: renderCategoryButton(SPORT_TITLE, /*#__PURE__*/_jsxDEV(SportsSoccerIcon, {\n          fontSize: \"large\",\n          className: classes.mHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderCategoryDialog = type => {\n    return /*#__PURE__*/_jsxDEV(CategoryOptionsDialogNewVer, {\n      doSearch: doSearch,\n      category: type,\n      list: options,\n      open: type == SPORT_TITLE && openSportDialog || type == LOCATION_TITLE && openLocationDialog,\n      handleClose: closeCategoryDialog,\n      hasSearchValues: hasSearchValues,\n      updateHasSearchValues: updateHasSearchValues,\n      updateSearchOptions: updateSearchOptions,\n      resetSearchInput: resetSearchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    children: [renderHeaderNew(), renderSearchNew(), renderCategoryButtons(), renderCategoryDialog(LOCATION_TITLE), renderCategoryDialog(SPORT_TITLE), /*#__PURE__*/_jsxDEV(FilterDialogNewVer, {\n      open: openFilterDialog,\n      handleClose: closeFilterDialog,\n      versionId: versionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FacilitiesPage, \"HokuYyPOUJQLRfEDX1QZXNz+5wo=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = FacilitiesPage;\nexport default FacilitiesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilitiesPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilitiesPage.jsx"],"names":["React","useEffect","useRef","useState","useParams","useLocation","useNavigate","makeStyles","useTheme","Grid","Typography","LocationOnIcon","SportsSoccerIcon","SearchPageOldVer","SearchPageNewVer","AppIconButton","SearchBarOldVer","SearchBarNewVer","FilterDialogNewVer","CategoryOptionsDialogNewVer","allSearchOptions","categoryOptionsMap","useStyles","theme","container","paddingTop","spacing","textAlignCenter","textAlign","mHalf","margin","py4","paddingBottom","p4","padding","pt1","FacilitiesPage","classes","location","navigate","versionId","URLSearchParams","search","get","searchInputNew","isOldVersion","LOCATION_TITLE","SPORT_TITLE","openSportDialog","setOpenSportDialog","openLocationDialog","setOpenLocationDialog","openFilterDialog","setOpenFilterDialog","listOptions","openPage","setOpenPage","hasSearchValues","setHasSearchValues","options","setOptions","recentSearchList","setRecentSearchList","JSON","parse","window","localStorage","getItem","setItem","stringify","goToSearchResultPage","searchInput","resetSearchInput","updateRecentSearch","newSearch","length","updateHasSearchValues","includes","unshift","index","indexOf","splice","doSearch","input","updateSearchOptions","removeRecentSearch","item","newRecentSearchList","filter","e","toLowerCase","newListOptions","map","result","facilities","f","push","area","openSearchPage","closeSearchPage","doOpenCategoryDialog","type","closeCategoryDialog","doOpenFilterDialog","closeFilterDialog","renderHeaderNew","renderSearchNew","renderCategoryButton","name","icon","renderCategoryButtons","renderCategoryDialog"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport SportsSoccerIcon from '@mui/icons-material/SportsSoccer';\nimport SearchPageOldVer from './SearchPageOldVer';\nimport SearchPageNewVer from './SearchPageNewVer';\nimport AppIconButton from '../components/AppIconButton.jsx';\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport SearchBarNewVer from '../components/SearchBarNewVer.jsx';\nimport FilterDialogNewVer from '../components/FilterDialogNewVer.jsx';\nimport CategoryOptionsDialogNewVer from '../components/CategoryOptionsDialogNewVer';\nimport { allSearchOptions, categoryOptionsMap } from '../resources/constants.jsx';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        // minHeight: 'calc(100vh - 56px)',\n        paddingTop: theme.spacing(2)\n    },\n    textAlignCenter: {\n        textAlign: 'center'\n    },\n    mHalf: {\n        margin: theme.spacing(0.5)\n    },\n    py4: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4)\n    },\n    p4: {\n        padding: theme.spacing(4)\n    },\n    pt1: {\n        paddingTop: theme.spacing(1)\n    }\n}));\n\nfunction FacilitiesPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n\n    const searchInputNew = useRef(null);\n\n    const isOldVersion = (versionId == 1) || (versionId == 2);\n    const LOCATION_TITLE = 'Location';\n    const SPORT_TITLE = 'Sport';\n\n    const [openSportDialog, setOpenSportDialog] = useState(false); // NEW VERSION\n    const [openLocationDialog, setOpenLocationDialog] = useState(false); // NEW VERSION\n    const [openFilterDialog, setOpenFilterDialog] = useState(false); // NEW VERSION\n\n    let listOptions = allSearchOptions;\n    if (openSportDialog) {\n        listOptions = (categoryOptionsMap[SPORT_TITLE]);\n    } else if (openLocationDialog) {\n        listOptions = (categoryOptionsMap[LOCATION_TITLE]);\n    }\n\n    const [openPage, setOpenPage] = useState(false);\n    const [hasSearchValues, setHasSearchValues] = useState(false);\n    const [options, setOptions] = useState(listOptions);\n    const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n    useEffect(() => {\n        if (window.localStorage.getItem('recentSearchList') === null) {\n            window.localStorage.setItem('recentSearchList', JSON.stringify([]));\n        }\n        if (openFilterDialog && openPage) {\n            setOpenPage(false);\n        }\n    }, [recentSearchList, options, openFilterDialog, openPage]);\n\n    const goToSearchResultPage = searchInput => {\n        navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n    };\n\n    const resetSearchInput = () => {\n        setHasSearchValues(false);\n        setOptions(listOptions);\n    };\n\n    const updateRecentSearch = (newSearch) => {\n        if (newSearch.length > 0) {\n            updateHasSearchValues(newSearch);\n            const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n            if (!recentSearchList.includes(newSearch)) {\n                recentSearchList.unshift(newSearch);\n            } else if (recentSearchList.includes(newSearch)) {\n                const index = recentSearchList.indexOf(newSearch);\n                recentSearchList.splice(index, 1);\n                recentSearchList.unshift(newSearch);\n            }\n            window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n            setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        }\n    };\n\n    const doSearch = input => {\n        updateSearchOptions(input)\n        updateRecentSearch(input);\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        goToSearchResultPage(input);\n    };\n\n    const removeRecentSearch = item => {\n        const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n        const newRecentSearchList = recentSearchList.filter(e => e != item);\n        window.localStorage.setItem('recentSearchList', JSON.stringify(newRecentSearchList));\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        updateHasSearchValues(false);\n    };\n\n    const updateHasSearchValues = input => {\n        setHasSearchValues(input && input.length > 0);\n    };\n\n    const updateSearchOptions = searchInput => {\n        if (listOptions && listOptions[0] && typeof listOptions[0] === 'string') {\n            setOptions(listOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n        } else {\n            const newListOptions = [];\n            listOptions.map(item => {\n                const result = item?.facilities?.filter(f => f.toLowerCase().includes(searchInput.toLowerCase()));\n                if (result.length > 0) {\n                    newListOptions.push({\n                        area: item.area,\n                        facilities: result\n                    });\n                }\n            });\n            setOptions(newListOptions);\n        }\n    };\n\n    const openSearchPage = () => {\n        setOpenPage(true);\n    };\n\n    const closeSearchPage = () => {\n        resetSearchInput();\n        setOpenPage(false);\n    };\n\n    /* OLD VERSION OF FACILITIES PAGE (1 & 2) */\n    if (isOldVersion) {\n        return (\n            <Grid container alignItems=\"flex-start\" justifyContent=\"center\" className={classes.container}>\n                <SearchBarOldVer startSearch={openSearchPage} />\n                <SearchPageOldVer\n                    openPage={openPage}\n                    cancelSearch={closeSearchPage}\n                    isOldVersion={isOldVersion}\n                    recentSearchList={recentSearchList}\n                    resetSearchInput={resetSearchInput}\n                    doSearch={doSearch}\n                    removeRecentSearch={removeRecentSearch}\n                    hasSearchValues={hasSearchValues}\n                    updateHasSearchValues={updateHasSearchValues}\n                    searchOptions={options}\n                    updateSearchOptions={updateSearchOptions}\n                />\n            </Grid>\n        );\n    };\n\n    /* NEW VERSION OF FACILITIES PAGE (3 & 4) */\n    const doOpenCategoryDialog = type => {\n        if (type == SPORT_TITLE) {\n            setOpenSportDialog(true);\n            setOptions(categoryOptionsMap[SPORT_TITLE]);\n        } else if (type == LOCATION_TITLE) {\n            setOpenLocationDialog(true);\n            setOptions(categoryOptionsMap[LOCATION_TITLE]);\n        }\n    };\n\n    const closeCategoryDialog = type => {\n        setOptions(allSearchOptions);\n        if (openSportDialog) {\n            setOpenSportDialog(false);\n        } else if (openLocationDialog) {\n            setOpenLocationDialog(false);\n        }\n    };\n\n    const doOpenFilterDialog = type => {\n        setOpenFilterDialog(true);\n        setOpenPage(false);\n    };\n\n    const closeFilterDialog = type => {\n        setOpenFilterDialog(false);\n    };\n\n    const renderHeaderNew = () => {\n        return (\n            <Grid item xs={12} className={`${classes.textAlignCenter} ${classes.py4}`}>\n                <Typography variant=\"h1\" color=\"textSecondary\">Hi, User.</Typography>\n                <Typography color=\"textSecondary\" className={classes.pt1}>\n                    What would you like to do today?\n                </Typography>\n            </Grid>\n        );\n    };\n\n    const renderSearchNew = () => {\n        return (\n            <Grid item xs={12} className={`${classes.textAlignCenter}`}>\n                <SearchBarNewVer startSearch={openSearchPage} closeFilterDialog={closeFilterDialog} openFilterDialog={doOpenFilterDialog} />\n                <SearchPageNewVer\n                    openPage={openPage}\n                    handleClosePage={closeSearchPage}\n                    recentSearchList={recentSearchList}\n                    resetSearchInput={resetSearchInput}\n                    doSearch={doSearch}\n                    removeRecentSearch={removeRecentSearch}\n                    hasSearchValues={hasSearchValues}\n                    updateHasSearchValues={updateHasSearchValues}\n                    searchOptions={options}\n                    updateSearchOptions={updateSearchOptions}\n                />\n            </Grid>\n        );\n    };\n\n    const renderCategoryButton = (name, icon) => {\n        return <AppIconButton onClick={() => {doOpenCategoryDialog(name)}} name={name} icon={icon} />;\n    };\n\n    const renderCategoryButtons = () => {\n        return (\n            <Grid container item justifyContent='space-evenly' xs={12} className={`${classes.p4}`}>\n                <Grid item>\n                    {renderCategoryButton(LOCATION_TITLE, <LocationOnIcon fontSize='large' className={classes.mHalf} />)}\n                </Grid>\n                <Grid item>\n                    {renderCategoryButton(SPORT_TITLE, <SportsSoccerIcon fontSize='large' className={classes.mHalf} />)}\n                </Grid>\n            </Grid>\n        );\n    };\n\n    const renderCategoryDialog = type => {\n        return (\n            <CategoryOptionsDialogNewVer\n                doSearch={doSearch}\n                category={type}\n                list={options}\n                open={(type == SPORT_TITLE && openSportDialog) || (type == LOCATION_TITLE && openLocationDialog)}\n                handleClose={closeCategoryDialog}\n                hasSearchValues={hasSearchValues}\n                updateHasSearchValues={updateHasSearchValues}\n                updateSearchOptions={updateSearchOptions}\n                resetSearchInput={resetSearchInput}\n            />\n        );\n    };\n\n    return (\n        <Grid container className={classes.container}>\n            {renderHeaderNew()}\n            {renderSearchNew()}\n            {renderCategoryButtons()}\n            {renderCategoryDialog(LOCATION_TITLE)}\n            {renderCategoryDialog(SPORT_TITLE)}\n            {<FilterDialogNewVer open={openFilterDialog} handleClose={closeFilterDialog} versionId={versionId} />}\n        </Grid>\n    );\n}\n\nexport default FacilitiesPage;"]},"metadata":{},"sourceType":"module"}