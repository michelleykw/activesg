{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Box from '@mui/material/Box';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport SearchBarNewVer from '../components/SearchBarNewVer.jsx';\nimport { allSearchOptions, sportsList } from '../resources/constants';\nimport ResultCardOld from '../components/ResultCardOld';\nimport ResultCardNew from '../components/ResultCardNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: \"100vh\"\n  }\n}));\n\nfunction ResultPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const useOldSearch = versionId == 1 || versionId == 2;\n  const useOldResult = versionId == 2 || versionId == 4;\n  const [query, setQuery] = useState('');\n  const [available, setAvailable] = useState(true);\n  const [facilityLocations, setFacilityLocations] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [dateRange, setDateRange] = useState({});\n  const [filteredData, setFilteredData] = useState([]);\n  const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n  const [searchCategory, setSearchCategory] = useState();\n  const [openSportDialog, setOpenSportDialog] = useState(false); // NEW VERSION\n\n  const [openLocationDialog, setOpenLocationDialog] = useState(false); // NEW VERSION\n\n  const [openFilterDialog, setOpenFilterDialog] = useState(false); // NEW VERSION\n\n  const [openPage, setOpenPage] = useState(false);\n  const [hasSearchValues, setHasSearchValues] = useState(false);\n  const [options, setOptions] = useState(allSearchOptions);\n  const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n  const openCategoryOptionsDialog = category => {\n    setOpenCategoryOptions(true);\n  };\n\n  const closeCategoryOptionsDialog = () => {\n    setOpenCategoryOptions(false);\n    navigate(-1);\n  };\n\n  const updateSearchOptions = searchInput => {\n    setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n  };\n\n  const goToSearchResultPage = searchInput => {\n    navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n  };\n\n  const updateHasSearchValues = input => {\n    setHasSearchValues(input && input.length > 0);\n  };\n\n  const updateRecentSearch = newSearch => {\n    if (newSearch.length > 0) {\n      updateHasSearchValues(newSearch);\n      const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n\n      if (!recentSearchList.includes(newSearch)) {\n        recentSearchList.unshift(newSearch);\n      } else if (recentSearchList.includes(newSearch)) {\n        const index = recentSearchList.indexOf(newSearch);\n        recentSearchList.splice(index, 1);\n        recentSearchList.unshift(newSearch);\n      }\n\n      window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n      setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    }\n  };\n\n  const doSearch = input => {\n    updateSearchOptions(input);\n    updateRecentSearch(input);\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    goToSearchResultPage(input);\n    setQuery(input);\n    closeCategoryOptionsDialog();\n  };\n\n  const renderCategoryDialog = () => {\n    return /*#__PURE__*/_jsxDEV(CategoryOptionsDialog, {\n      doSearch: doSearch,\n      category: searchCategory,\n      open: openCategoryOptions,\n      fullScreen: true,\n      handleClose: closeCategoryOptionsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  };\n\n  const resetNewQueries = () => {\n    setAvailable(true);\n    setFacilityLocations([]);\n    setSports([]);\n    setDateRange({});\n  };\n\n  const resetOldQueries = () => {\n    setQuery('');\n  };\n\n  const handleStringQuery = newQuery => {\n    resetNewQueries();\n\n    if (sportsList.includes(newQuery)) {\n      setSearchCategory('Sport');\n    } else {\n      setSearchCategory('Venue');\n    }\n\n    setQuery(newQuery);\n  };\n\n  const handleObjectQuery = newQuery => {\n    resetOldQueries();\n    setAvailable(newQuery.Availability);\n    setFacilityLocations(newQuery.Location);\n    setSports(newQuery.Sports);\n    setDateRange(newQuery.dateRange[0]);\n  };\n\n  const getQuery = () => {\n    let newQuery = new URLSearchParams(location.search).get('query');\n    newQuery = JSON.parse(newQuery);\n\n    if (typeof newQuery === 'object') {\n      handleObjectQuery(newQuery);\n    } else {\n      handleStringQuery(newQuery);\n    }\n  };\n\n  const filterData = data => {\n    console.log(data);\n    const tempData = data.filter(data => data.sport === query || data.name === query);\n    setFilteredData(tempData);\n  };\n\n  useEffect(() => {\n    getQuery();\n    filterData(data);\n  }, []);\n  useEffect(() => {\n    filterData(data);\n  }, [query]);\n\n  const closeFilterDialog = type => {\n    setOpenFilterDialog(false);\n    navigate(-1);\n  };\n\n  const doOpenFilterDialog = type => {\n    setOpenFilterDialog(true);\n    setOpenPage(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"centre\",\n      alignItems: \"flex-start\",\n      className: classes.fullScreenHeight,\n      width: \"95%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"95%\",\n        children: [useOldSearch && /*#__PURE__*/_jsxDEV(SearchBarOldVer, {\n          startSearch: openCategoryOptionsDialog,\n          hasSearchValues: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 39\n        }, this), !useOldSearch && /*#__PURE__*/_jsxDEV(SearchBarNewVer, {\n          startSearch: openCategoryOptionsDialog,\n          closeFilterDialog: closeFilterDialog,\n          openFilterDialog: doOpenFilterDialog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), renderCategoryDialog(), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-start\",\n          alignItems: \"centre\",\n          className: classes.mt1mb8,\n          children: [useOldResult && filteredData && filteredData.map(item => /*#__PURE__*/_jsxDEV(ResultCardOld, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 83\n          }, this)), !useOldResult && filteredData && filteredData.map(item => /*#__PURE__*/_jsxDEV(ResultCardNew, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 84\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), (!filteredData || filteredData.length === 0) && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          width: 1\n        },\n        minHeight: \"150px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"There are no results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultPage, \"SNvkZrFa/O7sXm5fmKuQCyMIhtk=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx"],"names":["React","useEffect","useState","makeStyles","Grid","Typography","data","Box","CategoryOptionsDialog","useParams","useLocation","useNavigate","SearchBarOldVer","SearchBarNewVer","allSearchOptions","sportsList","ResultCardOld","ResultCardNew","useStyles","theme","fullScreenHeight","minHeight","ResultPage","classes","location","navigate","versionId","URLSearchParams","search","get","useOldSearch","useOldResult","query","setQuery","available","setAvailable","facilityLocations","setFacilityLocations","sports","setSports","dateRange","setDateRange","filteredData","setFilteredData","openCategoryOptions","setOpenCategoryOptions","searchCategory","setSearchCategory","openSportDialog","setOpenSportDialog","openLocationDialog","setOpenLocationDialog","openFilterDialog","setOpenFilterDialog","openPage","setOpenPage","hasSearchValues","setHasSearchValues","options","setOptions","recentSearchList","setRecentSearchList","JSON","parse","window","localStorage","getItem","openCategoryOptionsDialog","category","closeCategoryOptionsDialog","updateSearchOptions","searchInput","filter","item","toLowerCase","includes","goToSearchResultPage","updateHasSearchValues","input","length","updateRecentSearch","newSearch","unshift","index","indexOf","splice","setItem","stringify","doSearch","renderCategoryDialog","resetNewQueries","resetOldQueries","handleStringQuery","newQuery","handleObjectQuery","Availability","Location","Sports","getQuery","filterData","console","log","tempData","sport","name","closeFilterDialog","type","doOpenFilterDialog","mt","ml","mt1mb8","map","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Box from '@mui/material/Box';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport SearchBarNewVer from '../components/SearchBarNewVer.jsx';\nimport { allSearchOptions, sportsList } from '../resources/constants';\nimport ResultCardOld from '../components/ResultCardOld';\nimport ResultCardNew from '../components/ResultCardNew';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: \"100vh\"\n    }\n}));\n\nfunction ResultPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const useOldSearch = (versionId == 1) || (versionId == 2);\n    const useOldResult = (versionId == 2) || (versionId == 4);\n\n    const [query, setQuery] = useState('');\n    const [available, setAvailable] = useState(true);\n    const [facilityLocations, setFacilityLocations] = useState([]);\n    const [sports, setSports] = useState([]);\n    const [dateRange, setDateRange] = useState({});\n    const [filteredData, setFilteredData] = useState([]);\n\n\n    const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n    const [searchCategory, setSearchCategory] = useState();\n\n    const [openSportDialog, setOpenSportDialog] = useState(false); // NEW VERSION\n    const [openLocationDialog, setOpenLocationDialog] = useState(false); // NEW VERSION\n    const [openFilterDialog, setOpenFilterDialog] = useState(false); // NEW VERSION\n\n    const [openPage, setOpenPage] = useState(false);\n    const [hasSearchValues, setHasSearchValues] = useState(false);\n    const [options, setOptions] = useState(allSearchOptions);\n    const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n    const openCategoryOptionsDialog = category => {\n        setOpenCategoryOptions(true);\n    };\n\n    const closeCategoryOptionsDialog = () => {\n        setOpenCategoryOptions(false);\n        navigate(-1);\n    };\n\n    const updateSearchOptions = searchInput => {\n        setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n    };\n\n    const goToSearchResultPage = searchInput => {\n        navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n    };\n\n    const updateHasSearchValues = input => {\n        setHasSearchValues(input && input.length > 0);\n    };\n\n    const updateRecentSearch = (newSearch) => {\n        if (newSearch.length > 0) {\n            updateHasSearchValues(newSearch);\n            const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n            if (!recentSearchList.includes(newSearch)) {\n                recentSearchList.unshift(newSearch);\n            } else if (recentSearchList.includes(newSearch)) {\n                const index = recentSearchList.indexOf(newSearch);\n                recentSearchList.splice(index, 1);\n                recentSearchList.unshift(newSearch);\n            }\n            window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n            setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        }\n    };\n\n    const doSearch = input => {\n        updateSearchOptions(input)\n        updateRecentSearch(input);\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        goToSearchResultPage(input);\n        setQuery(input);\n        closeCategoryOptionsDialog();\n    };\n\n    const renderCategoryDialog = () => {\n        return (\n            <CategoryOptionsDialog\n                doSearch={doSearch}\n                category={searchCategory}\n                open={openCategoryOptions}\n                fullScreen\n                handleClose={closeCategoryOptionsDialog}\n            />\n        );\n    };\n\n    const resetNewQueries = () => {\n        setAvailable(true);\n        setFacilityLocations([]);\n        setSports([]);\n        setDateRange({});\n    }\n\n    const resetOldQueries = () => {\n        setQuery('');\n    }\n\n    const handleStringQuery = (newQuery) => {\n        resetNewQueries();\n        if (sportsList.includes(newQuery)) {\n            setSearchCategory('Sport');\n        } else {\n            setSearchCategory('Venue');\n        }\n        setQuery(newQuery);\n    }\n\n    const handleObjectQuery = (newQuery) => {\n        resetOldQueries();\n        setAvailable(newQuery.Availability);\n        setFacilityLocations(newQuery.Location);\n        setSports(newQuery.Sports);\n        setDateRange(newQuery.dateRange[0]);\n    }\n\n    const getQuery = () => {\n        let newQuery = new URLSearchParams(location.search).get('query');\n        newQuery = JSON.parse(newQuery);\n        if (typeof newQuery === 'object') {\n            handleObjectQuery(newQuery);\n        } else {\n            handleStringQuery(newQuery);\n        }\n\n    }\n\n    const filterData = (data) => {\n        console.log(data);\n        const tempData = data.filter(data => data.sport === query || data.name === query);\n        setFilteredData(tempData);\n\n    }\n\n    useEffect(() => {\n        getQuery();\n        filterData(data);\n    }, [])\n\n    useEffect(() => {\n        filterData(data);\n    }, [query])\n\n    const closeFilterDialog = type => {\n        setOpenFilterDialog(false);\n        navigate(-1);\n\n    };\n\n    const doOpenFilterDialog = type => {\n        setOpenFilterDialog(true);\n        setOpenPage(false);\n    };\n\n    return (\n        <Box sx={{mt:1}}>\n            <Grid container direction=\"column\" justifyContent=\"centre\" alignItems=\"flex-start\" className={classes.fullScreenHeight} width='95%'>\n                {/* SEARCH BAR */}\n                <Box width=\"95%\">\n                    {useOldSearch && (<SearchBarOldVer startSearch={openCategoryOptionsDialog} hasSearchValues={query} />)}\n                    {!useOldSearch && (<SearchBarNewVer startSearch={openCategoryOptionsDialog} closeFilterDialog={closeFilterDialog} openFilterDialog={doOpenFilterDialog} />)}\n                </Box>\n\n                {renderCategoryDialog()}\n\n\n                {/* RESULTS PAGE */}\n                <Box sx={{ml:1}}>\n                    <Grid container justifyContent=\"flex-start\" alignItems=\"centre\" className={classes.mt1mb8}>\n                        {useOldResult && filteredData && filteredData.map(item => <ResultCardOld data={item}/>)}\n                        {!useOldResult && filteredData && filteredData.map(item => <ResultCardNew data={item}/>)}\n                    </Grid>\n                </Box>\n\n\n                {(!filteredData || filteredData.length === 0) &&\n                    <Grid container alignItems='center' justifyContent='center' sx={{width: 1}} minHeight='150px'>\n                        <Typography>There are no results found.</Typography>\n                    </Grid>\n\n                }\n\n            </Grid>\n        </Box>\n    );\n}\n\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}