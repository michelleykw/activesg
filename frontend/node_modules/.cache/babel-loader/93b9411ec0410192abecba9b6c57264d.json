{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Box from '@mui/material/Box';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport { allSearchOptions, sportsList } from '../resources/constants';\nimport ResultCardOld from '../components/ResultCardOld';\nimport ResultCardNew from '../components/ResultCardNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: \"100vh\"\n  }\n}));\n\nfunction ResultPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const useOldSearch = versionId == 1 || versionId == 2;\n  const useOldResult = versionId == 2 || versionId == 4;\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n  const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n  const [searchCategory, setSearchCategory] = useState();\n  const [openPage, setOpenPage] = useState(false);\n  const [hasSearchValues, setHasSearchValues] = useState(false);\n  const [options, setOptions] = useState(allSearchOptions);\n  const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n  const openCategoryOptionsDialog = category => {\n    setOpenCategoryOptions(true);\n  };\n\n  const closeCategoryOptionsDialog = () => {\n    console.log('close');\n    setOpenCategoryOptions(false);\n    navigate(-1);\n  };\n\n  const updateSearchOptions = searchInput => {\n    setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n  };\n\n  const goToSearchResultPage = searchInput => {\n    navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n  };\n\n  const updateHasSearchValues = input => {\n    setHasSearchValues(input && input.length > 0);\n  };\n\n  const updateRecentSearch = newSearch => {\n    if (newSearch.length > 0) {\n      updateHasSearchValues(newSearch);\n      const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n\n      if (!recentSearchList.includes(newSearch)) {\n        recentSearchList.unshift(newSearch);\n      } else if (recentSearchList.includes(newSearch)) {\n        const index = recentSearchList.indexOf(newSearch);\n        recentSearchList.splice(index, 1);\n        recentSearchList.unshift(newSearch);\n      }\n\n      window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n      setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    }\n  };\n\n  const doSearch = input => {\n    updateSearchOptions(input);\n    updateRecentSearch(input);\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    goToSearchResultPage(input);\n    setQuery(input);\n    closeCategoryOptionsDialog();\n  };\n\n  const renderCategoryDialog = () => {\n    return /*#__PURE__*/_jsxDEV(CategoryOptionsDialog, {\n      doSearch: doSearch,\n      category: searchCategory,\n      open: openCategoryOptions,\n      fullScreen: true,\n      handleClose: closeCategoryOptionsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getQuery = () => {\n    const newQuery = new URLSearchParams(location.search).get('query');\n\n    if (sportsList.includes(newQuery)) {\n      setSearchCategory('Sport');\n    } else {\n      setSearchCategory('Venue');\n    }\n\n    setQuery(newQuery);\n  };\n\n  const filterData = data => {\n    const tempData = data.filter(data => data.sport === query || data.name === query);\n    setFilteredData(tempData);\n  };\n\n  useEffect(() => {\n    getQuery();\n    filterData(data);\n  }, []);\n  useEffect(() => {\n    filterData(data);\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"centre\",\n      alignItems: \"flex-start\",\n      className: classes.fullScreenHeight,\n      width: \"95%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"95%\",\n        children: useOldSearch && /*#__PURE__*/_jsxDEV(SearchBarOldVer, {\n          startSearch: openCategoryOptionsDialog,\n          hasSearchValues: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-start\",\n          alignItems: \"centre\",\n          className: classes.mt1mb8,\n          children: [useOldResult && filteredData && filteredData.map(item => /*#__PURE__*/_jsxDEV(ResultCardOld, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 83\n          }, this)), !useOldResult && filteredData && filteredData.map(item => /*#__PURE__*/_jsxDEV(ResultCardNew, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 84\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), (!filteredData || filteredData.length === 0) && /*#__PURE__*/_jsxDEV(Box, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          width: 1\n        },\n        minHeight: \"150px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"There are no results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), renderCategoryDialog()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultPage, \"UT5Sam4OJv1R4ZcB3uFrcCSirEU=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx"],"names":["React","useEffect","useState","makeStyles","Grid","Typography","data","Box","CategoryOptionsDialog","useParams","useLocation","useNavigate","SearchBarOldVer","allSearchOptions","sportsList","ResultCardOld","ResultCardNew","useStyles","theme","fullScreenHeight","minHeight","ResultPage","classes","location","navigate","versionId","URLSearchParams","search","get","useOldSearch","useOldResult","filteredData","setFilteredData","query","setQuery","openCategoryOptions","setOpenCategoryOptions","searchCategory","setSearchCategory","openPage","setOpenPage","hasSearchValues","setHasSearchValues","options","setOptions","recentSearchList","setRecentSearchList","JSON","parse","window","localStorage","getItem","openCategoryOptionsDialog","category","closeCategoryOptionsDialog","console","log","updateSearchOptions","searchInput","filter","item","toLowerCase","includes","goToSearchResultPage","updateHasSearchValues","input","length","updateRecentSearch","newSearch","unshift","index","indexOf","splice","setItem","stringify","doSearch","renderCategoryDialog","getQuery","newQuery","filterData","tempData","sport","name","mt","ml","mt1mb8","map","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Box from '@mui/material/Box';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport { allSearchOptions, sportsList } from '../resources/constants';\nimport ResultCardOld from '../components/ResultCardOld';\nimport ResultCardNew from '../components/ResultCardNew';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: \"100vh\"\n    }\n}));\n\nfunction ResultPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const useOldSearch = (versionId == 1) || (versionId == 2);\n    const useOldResult = (versionId == 2) || (versionId == 4);\n\n    const [filteredData, setFilteredData] = useState([]);\n    const [query, setQuery] = useState('');\n\n    const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n    const [searchCategory, setSearchCategory] = useState();\n\n    const [openPage, setOpenPage] = useState(false);\n    const [hasSearchValues, setHasSearchValues] = useState(false);\n    const [options, setOptions] = useState(allSearchOptions);\n    const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n    const openCategoryOptionsDialog = category => {\n        setOpenCategoryOptions(true);\n    };\n\n    const closeCategoryOptionsDialog = () => {\n        console.log('close');\n        setOpenCategoryOptions(false);\n        navigate(-1);\n    };\n\n    const updateSearchOptions = searchInput => {\n        setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n    };\n\n    const goToSearchResultPage = searchInput => {\n        navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n    };\n\n    const updateHasSearchValues = input => {\n        setHasSearchValues(input && input.length > 0);\n    };\n\n    const updateRecentSearch = (newSearch) => {\n        if (newSearch.length > 0) {\n            updateHasSearchValues(newSearch);\n            const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n            if (!recentSearchList.includes(newSearch)) {\n                recentSearchList.unshift(newSearch);\n            } else if (recentSearchList.includes(newSearch)) {\n                const index = recentSearchList.indexOf(newSearch);\n                recentSearchList.splice(index, 1);\n                recentSearchList.unshift(newSearch);\n            }\n            window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n            setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        }\n    };\n\n    const doSearch = input => {\n        updateSearchOptions(input)\n        updateRecentSearch(input);\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        goToSearchResultPage(input);\n        setQuery(input);\n        closeCategoryOptionsDialog();\n    };\n\n    const renderCategoryDialog = () => {\n        return (\n            <CategoryOptionsDialog\n                doSearch={doSearch}\n                category={searchCategory}\n                open={openCategoryOptions}\n                fullScreen\n                handleClose={closeCategoryOptionsDialog}\n            />\n        );\n    };\n\n    const getQuery = () => {\n        const newQuery = new URLSearchParams(location.search).get('query');\n        if (sportsList.includes(newQuery)) {\n            setSearchCategory('Sport');\n        } else {\n            setSearchCategory('Venue');\n        }\n        setQuery(newQuery);\n    }\n\n    const filterData = (data) => {\n        const tempData = data.filter(data => data.sport === query || data.name === query);\n        setFilteredData(tempData);\n    }\n\n    useEffect(() => {\n        getQuery();\n        filterData(data);\n    }, [])\n\n    useEffect(() => {\n        filterData(data);\n    }, [query])\n\n    return (\n        <Box sx={{mt:1}}>\n            <Grid container direction=\"column\" justifyContent=\"centre\" alignItems=\"flex-start\" className={classes.fullScreenHeight} width='95%'>\n                <Box width=\"95%\">\n                    {useOldSearch && (\n                        <SearchBarOldVer startSearch={openCategoryOptionsDialog} hasSearchValues={query} />\n                    )}\n                </Box>\n\n                <Box sx={{ml:1}}>\n                    <Grid container justifyContent=\"flex-start\" alignItems=\"centre\" className={classes.mt1mb8}>\n                        {useOldResult && filteredData && filteredData.map(item => <ResultCardOld data={item}/>)}\n                        {!useOldResult && filteredData && filteredData.map(item => <ResultCardNew data={item}/>)}\n                    </Grid>\n                </Box>\n\n\n                {(!filteredData || filteredData.length === 0) &&\n                    <Box alignItems='center' justifyContent='center' sx={{width: 1}} minHeight='150px'>\n                        <Typography>There are no results found.</Typography>\n                    </Box>\n\n                }\n                {renderCategoryDialog()}\n            </Grid>\n        </Box>\n    );\n}\n\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}