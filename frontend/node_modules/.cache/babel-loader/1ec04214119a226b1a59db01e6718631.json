{"ast":null,"code":"var _s = $RefreshSig$();\n\n// ------------------------ IMPORT ------------------------ //\n// Copy this:\n// import { sendNetworkLog } from '../logging/logging.js';\n// Modify the path accordingly.\n// ------------------------ PARAMETERS ------------------------ //\n// eventname: The trigger (e.g. 'Click on Search Bar')\n// target: The button that was clicked (e.g. 'Bishan Sports Hall Card')\n// info: anything\n// log_version: versionId (1-4)\n// ------------------------ EXMAPLE USAGE ------------------------ //\n// sendNetworkLog('Clicked on: ' + loc, loc + ' card', '', versionId);\n// where loc = venue name\n// Note: UUID and timestamp are automatically generated/ retrieved.\nimport { v4 as uuidv4 } from 'uuid';\nimport { useLocation } from \"react-router-dom\";\n\nfunction getUUID() {\n  if (window.localStorage.getItem('UUID') === null) {\n    window.localStorage.setItem('UUID', uuidv4());\n  }\n\n  return window.localStorage.getItem('UUID');\n}\n\nfunction getCurrentTimeStamp() {\n  const oldDate = new Date(2022, 3, 1, 0, 0, 0, 0);\n  var secondBetweenTwoDate = Math.abs((new Date().getTime() - oldDate.getTime()) / 1000);\n  return secondBetweenTwoDate;\n}\n\nfunction getVersionId() {\n  _s();\n\n  const location = useLocation();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  return versionId;\n} // Logging submission function\n// submits to the google form at this URL:\n// docs.google.com/forms/d/e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww/viewform?usp=sf_link\n\n\n_s(getVersionId, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\nexport function sendNetworkLog(eventname, target, info, log_version) {\n  console.log('Sending to form...');\n  var formid = \"e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww\";\n  var data = {\n    \"entry.1493906674\": getUUID(),\n    \"entry.1999783829\": getCurrentTimeStamp(),\n    \"entry.115923075\": eventname,\n    \"entry.631695359\": target,\n    \"entry.206432095\": info,\n    \"entry.389866351\": getVersionId()\n  };\n  var params = [];\n\n  for (const key in data) {\n    params.push(key + \"=\" + encodeURIComponent(data[key]));\n  } // Submit the form using an image to avoid CORS warnings; warning may still happen, but log will be sent. Go check result in Google Form\n\n\n  new Image().src = \"https://docs.google.com/forms/d/\" + formid + \"/formResponse?\" + params.join(\"&\");\n}","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/logging/logging.js"],"names":["v4","uuidv4","useLocation","getUUID","window","localStorage","getItem","setItem","getCurrentTimeStamp","oldDate","Date","secondBetweenTwoDate","Math","abs","getTime","getVersionId","location","versionId","URLSearchParams","search","get","sendNetworkLog","eventname","target","info","log_version","console","log","formid","data","params","key","push","encodeURIComponent","Image","src","join"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,SAASC,OAAT,GAAmB;AACf,MAAIC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,MAAwC,IAA5C,EAAkD;AAC9CF,IAAAA,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4B,MAA5B,EAAoCN,MAAM,EAA1C;AACH;;AACD,SAAOG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAP;AACH;;AAED,SAASE,mBAAT,GAA+B;AAC3B,QAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAAhB;AACA,MAAIC,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAC,IAAIH,IAAJ,GAAWI,OAAX,KAAuBL,OAAO,CAACK,OAAR,EAAxB,IAA6C,IAAtD,CAA3B;AACA,SAAOH,oBAAP;AACH;;AAED,SAASI,YAAT,GAAwB;AAAA;;AACpB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,EAAqCC,GAArC,CAAyC,SAAzC,KAAuD,CAAzE;AACA,SAAOH,SAAP;AACH,C,CAED;AACA;AACA;;;GARSF,Y;UACYb,W;;;AAQrB,OAAO,SAASmB,cAAT,CAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,WAAjD,EAA8D;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,MAAIC,MAAM,GAAG,4DAAb;AACA,MAAIC,IAAI,GAAG;AACP,wBAAoB1B,OAAO,EADpB;AAEP,wBAAoBK,mBAAmB,EAFhC;AAGP,uBAAmBc,SAHZ;AAIP,uBAAmBC,MAJZ;AAKP,uBAAmBC,IALZ;AAMP,uBAAmBT,YAAY;AANxB,GAAX;AAQA,MAAIe,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACpBC,IAAAA,MAAM,CAACE,IAAP,CAAYD,GAAG,GAAG,GAAN,GAAYE,kBAAkB,CAACJ,IAAI,CAACE,GAAD,CAAL,CAA1C;AACH,GAdgE,CAejE;;;AACC,MAAIG,KAAJ,EAAD,CAAYC,GAAZ,GAAkB,qCAAqCP,MAArC,GACd,gBADc,GACKE,MAAM,CAACM,IAAP,CAAY,GAAZ,CADvB;AAEH","sourcesContent":["// ------------------------ IMPORT ------------------------ //\n// Copy this:\n// import { sendNetworkLog } from '../logging/logging.js';\n// Modify the path accordingly.\n\n// ------------------------ PARAMETERS ------------------------ //\n// eventname: The trigger (e.g. 'Click on Search Bar')\n// target: The button that was clicked (e.g. 'Bishan Sports Hall Card')\n// info: anything\n// log_version: versionId (1-4)\n\n// ------------------------ EXMAPLE USAGE ------------------------ //\n// sendNetworkLog('Clicked on: ' + loc, loc + ' card', '', versionId);\n// where loc = venue name\n\n// Note: UUID and timestamp are automatically generated/ retrieved.\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useLocation } from \"react-router-dom\";\n\nfunction getUUID() {\n    if (window.localStorage.getItem('UUID') === null) {\n        window.localStorage.setItem('UUID', uuidv4());\n    }\n    return window.localStorage.getItem('UUID');\n}\n\nfunction getCurrentTimeStamp() {\n    const oldDate = new Date(2022, 3, 1, 0, 0, 0, 0);\n    var secondBetweenTwoDate = Math.abs((new Date().getTime() - oldDate.getTime()) / 1000);\n    return secondBetweenTwoDate;\n}\n\nfunction getVersionId() {\n    const location = useLocation();\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    return versionId;\n}\n\n// Logging submission function\n// submits to the google form at this URL:\n// docs.google.com/forms/d/e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww/viewform?usp=sf_link\nexport function sendNetworkLog(eventname, target, info, log_version) {\n    console.log('Sending to form...');\n    var formid = \"e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww\";\n    var data = {\n        \"entry.1493906674\": getUUID(),\n        \"entry.1999783829\": getCurrentTimeStamp(),\n        \"entry.115923075\": eventname,\n        \"entry.631695359\": target,\n        \"entry.206432095\": info,\n        \"entry.389866351\": getVersionId()\n    };\n    var params = [];\n    for (const key in data) {\n        params.push(key + \"=\" + encodeURIComponent(data[key]));\n    }\n    // Submit the form using an image to avoid CORS warnings; warning may still happen, but log will be sent. Go check result in Google Form\n    (new Image).src = \"https://docs.google.com/forms/d/\" + formid +\n        \"/formResponse?\" + params.join(\"&\");\n}"]},"metadata":{},"sourceType":"module"}