{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilitiesPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport SearchPage from './SearchPage';\nimport SearchBar from '../components/SearchBar.jsx';\nimport { allSearchOptions } from '../resources/constants.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: 'calc(100vh - 56px)',\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nfunction FacilitiesPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const isOldVersion = versionId == 1 || versionId == 2;\n  const [openPage, setOpenPage] = useState(false);\n  const [hasSearchValues, setHasSearchValues] = useState(false);\n  const [options, setOptions] = useState(allSearchOptions);\n  const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n  useEffect(() => {\n    if (window.localStorage.getItem('recentSearchList') === null) {\n      window.localStorage.setItem('recentSearchList', JSON.stringify([]));\n    }\n  }, [recentSearchList, options]);\n\n  const goToSearchResultPage = searchInput => {\n    navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n  };\n\n  const resetSearchInput = () => {\n    setHasSearchValues(false);\n    setOptions(allSearchOptions);\n  };\n\n  const updateRecentSearch = newSearch => {\n    if (newSearch.length > 0) {\n      updateHasSearchValues(newSearch);\n      const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n\n      if (!recentSearchList.includes(newSearch)) {\n        recentSearchList.unshift(newSearch);\n      } else if (recentSearchList.includes(newSearch)) {\n        const index = recentSearchList.indexOf(newSearch);\n        recentSearchList.splice(index, 1);\n        recentSearchList.unshift(newSearch);\n      }\n\n      window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n      setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    }\n  };\n\n  const doSearch = input => {\n    updateSearchOptions(input);\n    updateRecentSearch(input);\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    goToSearchResultPage(input);\n  };\n\n  const removeRecentSearch = item => {\n    const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n    const newRecentSearchList = recentSearchList.filter(e => e != item);\n    window.localStorage.setItem('recentSearchList', JSON.stringify(newRecentSearchList));\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    updateHasSearchValues(false);\n  };\n\n  const updateHasSearchValues = input => {\n    setHasSearchValues(input && input.length > 0);\n  };\n\n  const updateSearchOptions = searchInput => {\n    setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n  };\n\n  const openSearchPage = () => {\n    setOpenPage(true);\n  };\n\n  const closeSearchPage = () => {\n    resetSearchInput();\n    setOpenPage(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    className: classes.container,\n    children: [isOldVersion && /*#__PURE__*/_jsxDEV(SearchBar, {\n      startSearch: openSearchPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SearchPage, {\n      openPage: openPage,\n      cancelSearch: closeSearchPage,\n      isOldVersion: isOldVersion,\n      recentSearchList: recentSearchList,\n      resetSearchInput: resetSearchInput,\n      doSearch: doSearch,\n      removeRecentSearch: removeRecentSearch,\n      hasSearchValues: hasSearchValues,\n      updateHasSearchValues: updateHasSearchValues,\n      searchOptions: options,\n      updateSearchOptions: updateSearchOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Welcome to Facilities Page. Start searching now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FacilitiesPage, \"pErJi674/b+fbnNpt8DcTsKm8M4=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = FacilitiesPage;\nexport default FacilitiesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilitiesPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilitiesPage.jsx"],"names":["React","useEffect","useState","useParams","useLocation","useNavigate","makeStyles","useTheme","Grid","Typography","SearchPage","SearchBar","allSearchOptions","useStyles","theme","container","minHeight","paddingTop","spacing","FacilitiesPage","classes","location","navigate","versionId","URLSearchParams","search","get","isOldVersion","openPage","setOpenPage","hasSearchValues","setHasSearchValues","options","setOptions","recentSearchList","setRecentSearchList","JSON","parse","window","localStorage","getItem","setItem","stringify","goToSearchResultPage","searchInput","resetSearchInput","updateRecentSearch","newSearch","length","updateHasSearchValues","includes","unshift","index","indexOf","splice","doSearch","input","updateSearchOptions","removeRecentSearch","item","newRecentSearchList","filter","e","toLowerCase","openSearchPage","closeSearchPage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport SearchPage from './SearchPage';\nimport SearchBar from '../components/SearchBar.jsx';\nimport { allSearchOptions } from '../resources/constants.jsx';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        minHeight: 'calc(100vh - 56px)',\n        paddingTop: theme.spacing(2)\n    }\n}));\n\nfunction FacilitiesPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n\n    const isOldVersion = (versionId == 1) || (versionId == 2);\n\n    const [openPage, setOpenPage] = useState(false);\n    const [hasSearchValues, setHasSearchValues] = useState(false);\n    const [options, setOptions] = useState(allSearchOptions);\n    const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n    useEffect(() => {\n        if (window.localStorage.getItem('recentSearchList') === null) {\n            window.localStorage.setItem('recentSearchList', JSON.stringify([]));\n        }\n    }, [recentSearchList, options]);\n\n    const goToSearchResultPage = searchInput => {\n        navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n    };\n\n    const resetSearchInput = () => {\n        setHasSearchValues(false);\n        setOptions(allSearchOptions);\n    };\n\n    const updateRecentSearch = (newSearch) => {\n        if (newSearch.length > 0) {\n            updateHasSearchValues(newSearch);\n            const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n            if (!recentSearchList.includes(newSearch)) {\n                recentSearchList.unshift(newSearch);\n            } else if (recentSearchList.includes(newSearch)) {\n                const index = recentSearchList.indexOf(newSearch);\n                recentSearchList.splice(index, 1);\n                recentSearchList.unshift(newSearch);\n            }\n            window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n            setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        }\n    };\n\n    const doSearch = input => {\n        updateSearchOptions(input)\n        updateRecentSearch(input);\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        goToSearchResultPage(input);\n    };\n\n    const removeRecentSearch = item => {\n        const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n        const newRecentSearchList = recentSearchList.filter(e => e != item);\n        window.localStorage.setItem('recentSearchList', JSON.stringify(newRecentSearchList));\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        updateHasSearchValues(false);\n    }\n\n    const updateHasSearchValues = input => {\n        setHasSearchValues(input && input.length > 0);\n    };\n\n    const updateSearchOptions = searchInput => {\n        setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n    };\n\n    \n    const openSearchPage = () => {\n        setOpenPage(true);\n    };\n    const closeSearchPage = () => {\n        resetSearchInput();\n        setOpenPage(false);\n    };\n\n    return (\n        <Grid container alignItems=\"flex-start\" justifyContent=\"center\" className={classes.container}>\n            {isOldVersion && (\n                <SearchBar startSearch={openSearchPage} />\n            )}\n            <SearchPage \n                openPage={openPage}\n                cancelSearch={closeSearchPage}\n                isOldVersion={isOldVersion} \n                recentSearchList={recentSearchList}\n                resetSearchInput={resetSearchInput}\n                doSearch={doSearch}\n                removeRecentSearch={removeRecentSearch}\n                hasSearchValues={hasSearchValues}\n                updateHasSearchValues={updateHasSearchValues}\n                searchOptions={options}\n                updateSearchOptions={updateSearchOptions}\n            />\n            <Typography>Welcome to Facilities Page. Start searching now!</Typography>\n        </Grid>\n    );\n}\n\nexport default FacilitiesPage;"]},"metadata":{},"sourceType":"module"}