{"ast":null,"code":"import React from'react';import{BrowserRouter,Route,Routes}from'react-router-dom';import CssBaseline from'@mui/material/CssBaseline';import{ThemeProvider}from'@mui/material/styles';import useMediaQuery from'@mui/material/useMediaQuery';import{makeStyles}from'@mui/styles';import{theme}from'./theme';import NavigationBar from'./components/NavigationBar';import FacilityViewPage from'./pages/FacilityViewPage';import ResultPage from'./pages/ResultPage';import FacilitiesPage from'./pages/FacilitiesPage';import NotFound from'./pages/NotFound';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{};});function App(){// plan out the various versions\n// input the data format, need to find a way to not change it when doing the survey\n// does state helps? -- keep track of state at the first page and link to everywhere else\n// sth like defaultData\nvar classes=useStyles();var isMobile=useMediaQuery('(max-width:600px)');return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.fullHeight,children:isMobile?/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/facilities/view/:id\",element:/*#__PURE__*/_jsx(FacilityViewPage,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/facilities/result\",element:/*#__PURE__*/_jsx(ResultPage,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/facilities\",element:/*#__PURE__*/_jsx(FacilitiesPage,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/programmes\",element:/*#__PURE__*/_jsx(NotFound,{isNotFacility:true})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/home\",element:/*#__PURE__*/_jsx(NotFound,{isNotFacility:true})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/buypass\",element:/*#__PURE__*/_jsx(NotFound,{isNotFacility:true})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/gameon\",element:/*#__PURE__*/_jsx(NotFound,{isNotFacility:true})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(NotFound,{isNotFacility:true})})]}),/*#__PURE__*/_jsx(NavigationBar,{})]}):/*#__PURE__*/_jsx(NotFound,{isNotMobile:true})})]});}export default App;","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/App.jsx"],"names":["React","BrowserRouter","Route","Routes","CssBaseline","ThemeProvider","useMediaQuery","makeStyles","theme","NavigationBar","FacilityViewPage","ResultPage","FacilitiesPage","NotFound","useStyles","App","classes","isMobile","fullHeight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,KAAxB,CAA+BC,MAA/B,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAASC,aAAT,KAA8B,sBAA9B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,OAASC,KAAT,KAAsB,SAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,C,wFAGA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,SAAAC,KAAK,QAAK,EAAL,EAAN,CAA5B,CAIA,QAASO,CAAAA,GAAT,EAAe,CACb;AACA;AACA;AACA;AACA,GAAMC,CAAAA,OAAO,CAAGF,SAAS,EAAzB,CACA,GAAMG,CAAAA,QAAQ,CAAGX,aAAa,CAAC,mBAAD,CAA9B,CACA,mBACE,MAAC,aAAD,EAAe,KAAK,CAAEE,KAAtB,wBACE,KAAC,WAAD,IADF,cAEE,YAAK,SAAS,CAAEQ,OAAO,CAACE,UAAxB,UACGD,QAAQ,cACP,MAAC,aAAD,yBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,sBAAlB,CAAyC,OAAO,cAAE,KAAC,gBAAD,IAAlD,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,oBAAlB,CAAuC,OAAO,cAAE,KAAC,UAAD,IAAhD,EAFF,cAGE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,aAAlB,CAAgC,OAAO,cAAE,KAAC,cAAD,IAAzC,EAHF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,aAAlB,CAAgC,OAAO,cAAE,KAAC,QAAD,EAAU,aAAa,KAAvB,EAAzC,EAJF,cAKE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,OAAlB,CAA0B,OAAO,cAAE,KAAC,QAAD,EAAU,aAAa,KAAvB,EAAnC,EALF,cAME,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,CAA6B,OAAO,cAAE,KAAC,QAAD,EAAU,aAAa,KAAvB,EAAtC,EANF,cAOE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,OAAO,cAAE,KAAC,QAAD,EAAU,aAAa,KAAvB,EAArC,EAPF,cAQE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,OAAO,cAAE,KAAC,QAAD,EAAU,aAAa,KAAvB,EAA/B,EARF,GADF,cAWE,KAAC,aAAD,IAXF,GADO,cAeP,KAAC,QAAD,EAAU,WAAW,KAArB,EAhBJ,EAFF,GADF,CAwBD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles'\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { makeStyles } from '@mui/styles';\nimport { theme } from './theme';\nimport NavigationBar from './components/NavigationBar';\nimport FacilityViewPage from './pages/FacilityViewPage';\nimport ResultPage from './pages/ResultPage';\nimport FacilitiesPage from './pages/FacilitiesPage';\nimport NotFound from './pages/NotFound';\n\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nfunction App() {\n  // plan out the various versions\n  // input the data format, need to find a way to not change it when doing the survey\n  // does state helps? -- keep track of state at the first page and link to everywhere else\n  // sth like defaultData\n  const classes = useStyles();\n  const isMobile = useMediaQuery('(max-width:600px)');\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.fullHeight}>\n        {isMobile ? (\n          <BrowserRouter>\n            <Routes>\n              <Route exact path=\"/facilities/view/:id\" element={<FacilityViewPage />} />\n              <Route exact path=\"/facilities/result\" element={<ResultPage />} />\n              <Route exact path=\"/facilities\" element={<FacilitiesPage />} />\n              <Route exact path=\"/programmes\" element={<NotFound isNotFacility />} />\n              <Route exact path=\"/home\" element={<NotFound isNotFacility />} />\n              <Route exact path=\"/buypass\" element={<NotFound isNotFacility />} />\n              <Route exact path=\"/gameon\" element={<NotFound isNotFacility />} />\n              <Route exact path=\"/\" element={<NotFound isNotFacility />} />\n            </Routes>\n            <NavigationBar />\n          </BrowserRouter>\n        ) : (\n          <NotFound isNotMobile />\n        )}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}