{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/ResultCardNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { sendNetworkLog } from '../logging/logging.js';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Box from '@mui/material/Box';\nimport { CardActionArea } from '@mui/material';\nimport swimming from '../static/swimming.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultCardNew(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const [slotsLeft, setSlotsLeft] = useState(0);\n\n  const goToFacilityViewPage = loc => {\n    sendNetworkLog('Clicked on: ' + loc, loc + ' card', '', versionId);\n    navigate(`/facilities/view?version=${versionId}&location=${loc}`);\n  };\n\n  useEffect(() => {\n    if (data) {\n      const avail = data.availability;\n      let sum = avail.map(item => Object.values(item['time']));\n      sum = sum.map(arr => arr.map(tuple => Object.values(tuple)[0]));\n      sum = sum.map(lst => lst.reduce((x, y) => parseInt(x) + parseInt(y)));\n      sum = sum.reduce((x, y) => x + y);\n      setSlotsLeft(sum);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        m: 1\n      },\n      style: {\n        border: \"none\",\n        boxShadow: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => goToFacilityViewPage(data.name),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          sx: {\n            width: 1,\n            maxHeight: '120px',\n            borderRadius: 2.5\n          },\n          src: swimming\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"white\",\n            sx: {\n              padding: '4px',\n              bgcolor: 'text.disabled',\n              borderRadius: 2\n            },\n            children: data.sport\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            sx: {\n              mt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              direction: \"row\",\n              sx: {\n                mt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"caption\",\n                sx: {\n                  fontWeight: 600\n                },\n                children: data.area + ' '\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"caption\",\n                children: [\"\\u2022 \", data.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"success.main\",\n            children: [slotsLeft, \" slots available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultCardNew, \"qxRXlEhKvWiClK20r+H5xw16MFE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = ResultCardNew;\nexport default ResultCardNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultCardNew\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/ResultCardNew.jsx"],"names":["React","useState","useEffect","useNavigate","useLocation","sendNetworkLog","Typography","Card","Grid","CardContent","CardMedia","Box","CardActionArea","swimming","ResultCardNew","data","location","navigate","versionId","URLSearchParams","search","get","slotsLeft","setSlotsLeft","goToFacilityViewPage","loc","avail","availability","sum","map","item","Object","values","arr","tuple","lst","reduce","x","y","parseInt","m","border","boxShadow","name","width","maxHeight","borderRadius","padding","bgcolor","sport","mt","fontWeight","area"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { sendNetworkLog } from '../logging/logging.js';\n\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Box from '@mui/material/Box';\nimport { CardActionArea } from '@mui/material';\nimport swimming from '../static/swimming.jpg';\n\nfunction ResultCardNew({data}) {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n\n    const [slotsLeft, setSlotsLeft] = useState(0);\n\n    const goToFacilityViewPage = loc => {\n        sendNetworkLog('Clicked on: ' + loc, loc + ' card', '', versionId);\n        navigate(`/facilities/view?version=${versionId}&location=${loc}`);\n    };\n\n    useEffect(() => {\n        if (data) {\n            const avail = data.availability;\n            let sum = avail.map(item => Object.values(item['time']));\n            sum = sum.map(arr => arr.map(tuple => Object.values(tuple)[0]));\n            sum = sum.map(lst => lst.reduce((x, y) => parseInt(x) + parseInt(y)));\n            sum = sum.reduce((x, y) => x + y);\n            setSlotsLeft(sum);\n        }\n    }, [data])\n\n\n    return (\n        <Grid item xs={6}>\n            <Card sx={{m:1}} style={{ border: \"none\", boxShadow: \"none\" }}>\n                <CardActionArea onClick={() => goToFacilityViewPage(data.name)}>\n                    <Box\n                        component=\"img\"\n                        sx={{width: 1, maxHeight: '120px', borderRadius: 2.5}}\n                        src={swimming} />\n                    <CardContent>\n                        <Typography variant=\"caption\" color=\"white\" sx={{padding: '4px', bgcolor: 'text.disabled', borderRadius: 2}}>\n                            {data.sport}\n                        </Typography>\n                        <Box direction=\"row\" sx={{mt: 1}}>\n                            <Box direction=\"row\" sx={{mt: 1}}>\n                                <Typography gutterBottom variant=\"caption\" sx={{fontWeight: 600}}>\n                                    {data.area + ' '}\n                                </Typography>\n                                <Typography gutterBottom variant=\"caption\">\n                                    • {data.name}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Typography variant=\"caption\" color=\"success.main\">\n                            {slotsLeft} slots available\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Grid>\n    );\n}\n\nexport default ResultCardNew;\n"]},"metadata":{},"sourceType":"module"}