{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Box from '@mui/material/Box';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { allSearchOptions, sportsList, categoryOptionsMap } from '../resources/constants';\nimport ResultCardOld from '../components/ResultCardOld';\nimport ResultCardNew from '../components/ResultCardNew';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport SportsSoccerIcon from '@mui/icons-material/SportsSoccer';\nimport AppIconButton from '../components/AppIconButton.jsx';\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport SearchBarNewVer from '../components/SearchBarNewVer.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: \"100vh\"\n  }\n}));\n\nfunction ResultPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const useOldSearch = versionId == 1 || versionId == 2;\n  const useOldResult = versionId == 2 || versionId == 4;\n  const [query, setQuery] = useState('');\n  const [available, setAvailable] = useState(true);\n  const [facilityLocations, setFacilityLocations] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [dateRange, setDateRange] = useState({});\n  const [filteredData, setFilteredData] = useState([]);\n  const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n  const [searchCategory, setSearchCategory] = useState();\n  const [openSportDialog, setOpenSportDialog] = useState(false); // NEW VERSION\n\n  const [openLocationDialog, setOpenLocationDialog] = useState(false); // NEW VERSION\n\n  const [openFilterDialog, setOpenFilterDialog] = useState(false); // NEW VERSION\n\n  const [openPage, setOpenPage] = useState(false);\n  const [hasSearchValues, setHasSearchValues] = useState(false);\n  const [options, setOptions] = useState(allSearchOptions);\n  const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n  useEffect(() => {\n    getQuery();\n    filterData(data);\n  }, []);\n  useEffect(() => {\n    filterData(data);\n  }, [query, available, facilityLocations, sports, dateRange]);\n\n  const openCategoryOptionsDialog = category => {\n    setOpenCategoryOptions(true);\n  };\n\n  const closeCategoryOptionsDialog = () => {\n    setOpenCategoryOptions(false);\n    navigate(-1);\n  };\n\n  const updateSearchOptions = searchInput => {\n    setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n  };\n\n  const goToSearchResultPage = searchInput => {\n    navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n  };\n\n  const updateHasSearchValues = input => {\n    setHasSearchValues(input && input.length > 0);\n  };\n\n  const updateRecentSearch = newSearch => {\n    if (newSearch.length > 0) {\n      updateHasSearchValues(newSearch);\n      const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n\n      if (!recentSearchList.includes(newSearch)) {\n        recentSearchList.unshift(newSearch);\n      } else if (recentSearchList.includes(newSearch)) {\n        const index = recentSearchList.indexOf(newSearch);\n        recentSearchList.splice(index, 1);\n        recentSearchList.unshift(newSearch);\n      }\n\n      window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n      setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    }\n  };\n\n  const doSearch = input => {\n    updateSearchOptions(input);\n    updateRecentSearch(input);\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    goToSearchResultPage(input);\n    setQuery(input);\n    closeCategoryOptionsDialog();\n  };\n\n  const renderCategoryDialog = () => {\n    return /*#__PURE__*/_jsxDEV(CategoryOptionsDialog, {\n      doSearch: doSearch,\n      category: searchCategory,\n      open: openCategoryOptions,\n      fullScreen: true,\n      handleClose: closeCategoryOptionsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  };\n\n  const closeFilterDialog = type => {\n    setOpenFilterDialog(false);\n    navigate(-1);\n  };\n\n  const doOpenFilterDialog = type => {\n    setOpenFilterDialog(true);\n    setOpenPage(false);\n  };\n\n  const searchInputNew = useRef(null);\n  const isOldVersion = versionId == 1 || versionId == 2;\n  const LOCATION_TITLE = 'Location';\n  const SPORT_TITLE = 'Sport';\n  let listOptions = allSearchOptions; // categoryOptionsMap['Venue'] -- use the venue list instead as the name of the facilities\n\n  if (openSportDialog) {\n    listOptions = categoryOptionsMap[SPORT_TITLE];\n  } else if (openLocationDialog) {\n    listOptions = categoryOptionsMap[LOCATION_TITLE];\n  }\n\n  useEffect(() => {\n    if (window.localStorage.getItem('recentSearchList') === null) {\n      window.localStorage.setItem('recentSearchList', JSON.stringify([]));\n    }\n\n    if (openFilterDialog && openPage) {\n      setOpenPage(false);\n    }\n  }, [recentSearchList, options, openFilterDialog, openPage]);\n\n  const resetSearchInput = () => {\n    setHasSearchValues(false);\n    setOptions(listOptions);\n  };\n\n  const removeRecentSearch = item => {\n    const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n    const newRecentSearchList = recentSearchList.filter(e => e != item);\n    window.localStorage.setItem('recentSearchList', JSON.stringify(newRecentSearchList));\n    setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n    updateHasSearchValues(false);\n  };\n\n  const openSearchPage = () => {\n    setOpenPage(true);\n  };\n\n  const closeSearchPage = () => {\n    resetSearchInput();\n    setOpenPage(false);\n  };\n  /* OLD VERSION OF FACILITIES PAGE (1 & 2) */\n\n\n  const renderSearchOld = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"flex-start\",\n      justifyContent: \"center\",\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(SearchBarOldVer, {\n        startSearch: openSearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  };\n\n  if (isOldVersion) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"flex-start\",\n      justifyContent: \"center\",\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(SearchBarOldVer, {\n        startSearch: openSearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  /* NEW VERSION OF FACILITIES PAGE (3 & 4) */\n\n  const doOpenCategoryDialog = type => {\n    if (type == SPORT_TITLE) {\n      setOpenSportDialog(true);\n      setOptions(categoryOptionsMap[SPORT_TITLE]);\n    } else if (type == LOCATION_TITLE) {\n      setOpenLocationDialog(true);\n      setOptions(categoryOptionsMap[LOCATION_TITLE]);\n    }\n  };\n\n  const closeCategoryDialog = type => {\n    setOptions(allSearchOptions);\n\n    if (openSportDialog) {\n      setOpenSportDialog(false);\n    } else if (openLocationDialog) {\n      setOpenLocationDialog(false);\n    }\n  };\n\n  const renderSearchNew = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: `${classes.textAlignCenter}`,\n      children: /*#__PURE__*/_jsxDEV(SearchBarNewVer, {\n        startSearch: openSearchPage,\n        closeFilterDialog: closeFilterDialog,\n        openFilterDialog: doOpenFilterDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderCategoryButton = (name, icon) => {\n    return /*#__PURE__*/_jsxDEV(AppIconButton, {\n      onClick: () => {\n        doOpenCategoryDialog(name);\n      },\n      name: name,\n      icon: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 16\n    }, this);\n  };\n\n  const renderCategoryButtons = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      justifyContent: \"space-evenly\",\n      xs: 12,\n      className: `${classes.p4}`,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: renderCategoryButton(LOCATION_TITLE, /*#__PURE__*/_jsxDEV(LocationOnIcon, {\n          fontSize: \"large\",\n          className: classes.mHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: renderCategoryButton(SPORT_TITLE, /*#__PURE__*/_jsxDEV(SportsSoccerIcon, {\n          fontSize: \"large\",\n          className: classes.mHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this);\n  }; // RESULTS PAGE FILTER METHODS\n\n\n  const resetNewQueries = () => {\n    setAvailable(true);\n    setFacilityLocations([]);\n    setSports([]);\n    setDateRange({});\n  };\n\n  const resetOldQueries = () => {\n    setQuery('');\n  };\n\n  const handleStringQuery = newQuery => {\n    resetNewQueries();\n\n    if (sportsList.includes(newQuery)) {\n      setSearchCategory('Sport');\n    } else {\n      setSearchCategory('Venue');\n    }\n\n    setQuery(newQuery);\n  };\n\n  const handleObjectQuery = newQuery => {\n    resetOldQueries();\n    setAvailable(newQuery.Availability);\n    setFacilityLocations(newQuery.Location);\n    setSports(newQuery.Sports);\n    setDateRange(newQuery.dateRange[0]);\n  };\n\n  const getQuery = () => {\n    let newQuery = new URLSearchParams(location.search).get('query');\n\n    try {\n      newQuery = JSON.parse(newQuery);\n      handleObjectQuery(newQuery);\n    } catch (error) {\n      handleStringQuery(newQuery);\n    }\n  };\n\n  const filterOldQuery = data => {\n    const tempData = data.filter(data => data.sport === query || data.name === query);\n    setFilteredData(tempData);\n  };\n\n  const filterNewQuery = data => {\n    let tempData = data;\n\n    const isAccepted = item => {\n      let isLocationOK = facilityLocations.length > 0 ? facilityLocations.find(ele => ele === item.area) : true;\n\n      if (isLocationOK === undefined) {\n        isLocationOK = false;\n      }\n\n      const isSportOK = sports.length > 0 ? sports.includes(item.sport) : true;\n      const isAvailable = available;\n      return isLocationOK && isSportOK && isAvailable;\n    };\n\n    tempData = data.filter(data => isAccepted(data));\n    setFilteredData(tempData);\n  };\n\n  const filterData = data => {\n    if (query !== '') {\n      filterOldQuery(data);\n    } else {\n      filterNewQuery(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"centre\",\n      alignItems: \"flex-start\",\n      className: classes.fullScreenHeight,\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"95%\",\n        children: [useOldSearch && renderSearchOld(), !useOldSearch && renderSearchNew()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), renderCategoryDialog(), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-start\",\n          alignItems: \"centre\",\n          className: classes.mt1mb8,\n          children: [useOldResult && filteredData && filteredData.map(item => /*#__PURE__*/_jsxDEV(ResultCardOld, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 83\n          }, this)), !useOldResult && filteredData && filteredData.map(item => /*#__PURE__*/_jsxDEV(ResultCardNew, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 84\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), (!filteredData || filteredData.length === 0) && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          width: 1\n        },\n        minHeight: \"150px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"There are no results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultPage, \"QDU67E4Lch8gAQT+dwFCmEZ32vc=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx"],"names":["React","useEffect","useRef","useState","makeStyles","Grid","Typography","data","Box","CategoryOptionsDialog","useParams","useLocation","useNavigate","allSearchOptions","sportsList","categoryOptionsMap","ResultCardOld","ResultCardNew","LocationOnIcon","SportsSoccerIcon","AppIconButton","SearchBarOldVer","SearchBarNewVer","useStyles","theme","fullScreenHeight","minHeight","ResultPage","classes","location","navigate","versionId","URLSearchParams","search","get","useOldSearch","useOldResult","query","setQuery","available","setAvailable","facilityLocations","setFacilityLocations","sports","setSports","dateRange","setDateRange","filteredData","setFilteredData","openCategoryOptions","setOpenCategoryOptions","searchCategory","setSearchCategory","openSportDialog","setOpenSportDialog","openLocationDialog","setOpenLocationDialog","openFilterDialog","setOpenFilterDialog","openPage","setOpenPage","hasSearchValues","setHasSearchValues","options","setOptions","recentSearchList","setRecentSearchList","JSON","parse","window","localStorage","getItem","getQuery","filterData","openCategoryOptionsDialog","category","closeCategoryOptionsDialog","updateSearchOptions","searchInput","filter","item","toLowerCase","includes","goToSearchResultPage","updateHasSearchValues","input","length","updateRecentSearch","newSearch","unshift","index","indexOf","splice","setItem","stringify","doSearch","renderCategoryDialog","closeFilterDialog","type","doOpenFilterDialog","searchInputNew","isOldVersion","LOCATION_TITLE","SPORT_TITLE","listOptions","resetSearchInput","removeRecentSearch","newRecentSearchList","e","openSearchPage","closeSearchPage","renderSearchOld","container","doOpenCategoryDialog","closeCategoryDialog","renderSearchNew","textAlignCenter","renderCategoryButton","name","icon","renderCategoryButtons","p4","mHalf","resetNewQueries","resetOldQueries","handleStringQuery","newQuery","handleObjectQuery","Availability","Location","Sports","error","filterOldQuery","tempData","sport","filterNewQuery","isAccepted","isLocationOK","find","ele","area","undefined","isSportOK","isAvailable","mt","ml","mt1mb8","map","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,kBAApD;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,kBAAvC,QAAiE,wBAAjE;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,MAAMC,SAAS,GAAGnB,UAAU,CAACoB,KAAK,KAAK;AACnCC,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,SAAS,EAAE;AADG;AADiB,CAAL,CAAN,CAA5B;;AAMA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAMmB,SAAS,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,EAAqCC,GAArC,CAAyC,SAAzC,KAAuD,CAAzE;AACA,QAAMC,YAAY,GAAIJ,SAAS,IAAI,CAAd,IAAqBA,SAAS,IAAI,CAAvD;AACA,QAAMK,YAAY,GAAIL,SAAS,IAAI,CAAd,IAAqBA,SAAS,IAAI,CAAvD;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACsC,iBAAD,EAAoBC,oBAApB,IAA4CvC,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACwC,MAAD,EAASC,SAAT,IAAsBzC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0C,SAAD,EAAYC,YAAZ,IAA4B3C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC4C,YAAD,EAAeC,eAAf,IAAkC7C,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAAC8C,mBAAD,EAAsBC,sBAAtB,IAAgD/C,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACgD,cAAD,EAAiBC,iBAAjB,IAAsCjD,QAAQ,EAApD;AAEA,QAAM,CAACkD,eAAD,EAAkBC,kBAAlB,IAAwCnD,QAAQ,CAAC,KAAD,CAAtD,CAnBkB,CAmB6C;;AAC/D,QAAM,CAACoD,kBAAD,EAAqBC,qBAArB,IAA8CrD,QAAQ,CAAC,KAAD,CAA5D,CApBkB,CAoBmD;;AACrE,QAAM,CAACsD,gBAAD,EAAmBC,mBAAnB,IAA0CvD,QAAQ,CAAC,KAAD,CAAxD,CArBkB,CAqB+C;;AAEjE,QAAM,CAACwD,QAAD,EAAWC,WAAX,IAA0BzD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC0D,eAAD,EAAkBC,kBAAlB,IAAwC3D,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC4D,OAAD,EAAUC,UAAV,IAAwB7D,QAAQ,CAACU,gBAAD,CAAtC;AACA,QAAM,CAACoD,gBAAD,EAAmBC,mBAAnB,IAA0C/D,QAAQ,CAACgE,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAD,CAAxD;AAEAtE,EAAAA,SAAS,CAAC,MAAM;AACZuE,IAAAA,QAAQ;AACRC,IAAAA,UAAU,CAAClE,IAAD,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZwE,IAAAA,UAAU,CAAClE,IAAD,CAAV;AACH,GAFQ,EAEN,CAAC8B,KAAD,EAAQE,SAAR,EAAmBE,iBAAnB,EAAsCE,MAAtC,EAA8CE,SAA9C,CAFM,CAAT;;AAIA,QAAM6B,yBAAyB,GAAGC,QAAQ,IAAI;AAC1CzB,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,GAFD;;AAIA,QAAM0B,0BAA0B,GAAG,MAAM;AACrC1B,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACApB,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACH,GAHD;;AAKA,QAAM+C,mBAAmB,GAAGC,WAAW,IAAI;AACvCd,IAAAA,UAAU,CAACnD,gBAAgB,CAACkE,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BJ,WAAW,CAACG,WAAZ,EAA5B,CAAhC,CAAD,CAAV;AACH,GAFD;;AAIA,QAAME,oBAAoB,GAAGL,WAAW,IAAI;AACxChD,IAAAA,QAAQ,CAAE,8BAA6BC,SAAU,UAAS+C,WAAY,EAA9D,CAAR;AACH,GAFD;;AAIA,QAAMM,qBAAqB,GAAGC,KAAK,IAAI;AACnCvB,IAAAA,kBAAkB,CAACuB,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CAAzB,CAAlB;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,SAAD,IAAe;AACtC,QAAIA,SAAS,CAACF,MAAV,GAAmB,CAAvB,EAA0B;AACtBF,MAAAA,qBAAqB,CAACI,SAAD,CAArB;AACA,YAAMvB,gBAAgB,GAAGE,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAzB;;AACA,UAAI,CAACN,gBAAgB,CAACiB,QAAjB,CAA0BM,SAA1B,CAAL,EAA2C;AACvCvB,QAAAA,gBAAgB,CAACwB,OAAjB,CAAyBD,SAAzB;AACH,OAFD,MAEO,IAAIvB,gBAAgB,CAACiB,QAAjB,CAA0BM,SAA1B,CAAJ,EAA0C;AAC7C,cAAME,KAAK,GAAGzB,gBAAgB,CAAC0B,OAAjB,CAAyBH,SAAzB,CAAd;AACAvB,QAAAA,gBAAgB,CAAC2B,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;AACAzB,QAAAA,gBAAgB,CAACwB,OAAjB,CAAyBD,SAAzB;AACH;;AACDnB,MAAAA,MAAM,CAACC,YAAP,CAAoBuB,OAApB,CAA4B,kBAA5B,EAAgD1B,IAAI,CAAC2B,SAAL,CAAe7B,gBAAf,CAAhD;AACAC,MAAAA,mBAAmB,CAACC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAD,CAAnB;AACH;AACJ,GAdD;;AAgBA,QAAMwB,QAAQ,GAAGV,KAAK,IAAI;AACtBR,IAAAA,mBAAmB,CAACQ,KAAD,CAAnB;AACAE,IAAAA,kBAAkB,CAACF,KAAD,CAAlB;AACAnB,IAAAA,mBAAmB,CAACC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAD,CAAnB;AACAY,IAAAA,oBAAoB,CAACE,KAAD,CAApB;AACA/C,IAAAA,QAAQ,CAAC+C,KAAD,CAAR;AACAT,IAAAA,0BAA0B;AAC7B,GAPD;;AASA,QAAMoB,oBAAoB,GAAG,MAAM;AAC/B,wBACI,QAAC,qBAAD;AACI,MAAA,QAAQ,EAAED,QADd;AAEI,MAAA,QAAQ,EAAE5C,cAFd;AAGI,MAAA,IAAI,EAAEF,mBAHV;AAII,MAAA,UAAU,MAJd;AAKI,MAAA,WAAW,EAAE2B;AALjB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD;;AAYA,QAAMqB,iBAAiB,GAAGC,IAAI,IAAI;AAC9BxC,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA5B,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AAEH,GAJD;;AAMA,QAAMqE,kBAAkB,GAAGD,IAAI,IAAI;AAC/BxC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMwC,cAAc,GAAGlG,MAAM,CAAC,IAAD,CAA7B;AAEA,QAAMmG,YAAY,GAAItE,SAAS,IAAI,CAAd,IAAqBA,SAAS,IAAI,CAAvD;AACA,QAAMuE,cAAc,GAAG,UAAvB;AACA,QAAMC,WAAW,GAAG,OAApB;AAEA,MAAIC,WAAW,GAAG3F,gBAAlB,CAhHkB,CAgHkB;;AACpC,MAAIwC,eAAJ,EAAqB;AACjBmD,IAAAA,WAAW,GAAIzF,kBAAkB,CAACwF,WAAD,CAAjC;AACH,GAFD,MAEO,IAAIhD,kBAAJ,EAAwB;AAC3BiD,IAAAA,WAAW,GAAIzF,kBAAkB,CAACuF,cAAD,CAAjC;AACH;;AAEDrG,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoE,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,MAAoD,IAAxD,EAA8D;AAC1DF,MAAAA,MAAM,CAACC,YAAP,CAAoBuB,OAApB,CAA4B,kBAA5B,EAAgD1B,IAAI,CAAC2B,SAAL,CAAe,EAAf,CAAhD;AACH;;AACD,QAAIrC,gBAAgB,IAAIE,QAAxB,EAAkC;AAC9BC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,GAPQ,EAON,CAACK,gBAAD,EAAmBF,OAAnB,EAA4BN,gBAA5B,EAA8CE,QAA9C,CAPM,CAAT;;AASA,QAAM8C,gBAAgB,GAAG,MAAM;AAC3B3C,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,IAAAA,UAAU,CAACwC,WAAD,CAAV;AACH,GAHD;;AAKA,QAAME,kBAAkB,GAAG1B,IAAI,IAAI;AAC/B,UAAMf,gBAAgB,GAAGE,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAzB;AACA,UAAMoC,mBAAmB,GAAG1C,gBAAgB,CAACc,MAAjB,CAAwB6B,CAAC,IAAIA,CAAC,IAAI5B,IAAlC,CAA5B;AACAX,IAAAA,MAAM,CAACC,YAAP,CAAoBuB,OAApB,CAA4B,kBAA5B,EAAgD1B,IAAI,CAAC2B,SAAL,CAAea,mBAAf,CAAhD;AACAzC,IAAAA,mBAAmB,CAACC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAD,CAAnB;AACAa,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAND;;AAQA,QAAMyB,cAAc,GAAG,MAAM;AACzBjD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMkD,eAAe,GAAG,MAAM;AAC1BL,IAAAA,gBAAgB;AAChB7C,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;AAKA;;;AACA,QAAMmD,eAAe,GAAG,MAAM;AAC1B,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAC,YAA3B;AAAwC,MAAA,cAAc,EAAC,QAAvD;AAAgE,MAAA,SAAS,EAAEnF,OAAO,CAACoF,SAAnF;AAAA,6BACI,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAOA,MAAIR,YAAJ,EAAkB;AACd,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAC,YAA3B;AAAwC,MAAA,cAAc,EAAC,QAAvD;AAAgE,MAAA,SAAS,EAAEzE,OAAO,CAACoF,SAAnF;AAAA,6BACI,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAAA;AAED;;AACA,QAAMI,oBAAoB,GAAGf,IAAI,IAAI;AACjC,QAAIA,IAAI,IAAIK,WAAZ,EAAyB;AACrBjD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAU,MAAAA,UAAU,CAACjD,kBAAkB,CAACwF,WAAD,CAAnB,CAAV;AACH,KAHD,MAGO,IAAIL,IAAI,IAAII,cAAZ,EAA4B;AAC/B9C,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAQ,MAAAA,UAAU,CAACjD,kBAAkB,CAACuF,cAAD,CAAnB,CAAV;AACH;AACJ,GARD;;AAUA,QAAMY,mBAAmB,GAAGhB,IAAI,IAAI;AAChClC,IAAAA,UAAU,CAACnD,gBAAD,CAAV;;AACA,QAAIwC,eAAJ,EAAqB;AACjBC,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,KAFD,MAEO,IAAIC,kBAAJ,EAAwB;AAC3BC,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH;AACJ,GAPD;;AAUA,QAAM2D,eAAe,GAAG,MAAM;AAC1B,wBACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,SAAS,EAAG,GAAEvF,OAAO,CAACwF,eAAgB,EAAzD;AAAA,6BACI,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEP,cAA9B;AAA8C,QAAA,iBAAiB,EAAEZ,iBAAjE;AAAoF,QAAA,gBAAgB,EAAEE;AAAtG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,QAAMkB,oBAAoB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACzC,wBAAO,QAAC,aAAD;AAAe,MAAA,OAAO,EAAE,MAAM;AAACN,QAAAA,oBAAoB,CAACK,IAAD,CAApB;AAA2B,OAA1D;AAA4D,MAAA,IAAI,EAAEA,IAAlE;AAAwE,MAAA,IAAI,EAAEC;AAA9E;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,QAAMC,qBAAqB,GAAG,MAAM;AAChC,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,MAApB;AAAqB,MAAA,cAAc,EAAC,cAApC;AAAmD,MAAA,EAAE,EAAE,EAAvD;AAA2D,MAAA,SAAS,EAAG,GAAE5F,OAAO,CAAC6F,EAAG,EAApF;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBACKJ,oBAAoB,CAACf,cAAD,eAAiB,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,OAAzB;AAAiC,UAAA,SAAS,EAAE1E,OAAO,CAAC8F;AAApD;AAAA;AAAA;AAAA;AAAA,gBAAjB;AADzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBACKL,oBAAoB,CAACd,WAAD,eAAc,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAC,OAA3B;AAAmC,UAAA,SAAS,EAAE3E,OAAO,CAAC8F;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAAd;AADzB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,CAvMkB,CAoNlB;;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BnF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GALD;;AAOA,QAAM8E,eAAe,GAAG,MAAM;AAC1BtF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMuF,iBAAiB,GAAIC,QAAD,IAAc;AACpCH,IAAAA,eAAe;;AACf,QAAI7G,UAAU,CAACoE,QAAX,CAAoB4C,QAApB,CAAJ,EAAmC;AAC/B1E,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACH;;AACDd,IAAAA,QAAQ,CAACwF,QAAD,CAAR;AACH,GARD;;AAUA,QAAMC,iBAAiB,GAAID,QAAD,IAAc;AACpCF,IAAAA,eAAe;AACfpF,IAAAA,YAAY,CAACsF,QAAQ,CAACE,YAAV,CAAZ;AACAtF,IAAAA,oBAAoB,CAACoF,QAAQ,CAACG,QAAV,CAApB;AACArF,IAAAA,SAAS,CAACkF,QAAQ,CAACI,MAAV,CAAT;AACApF,IAAAA,YAAY,CAACgF,QAAQ,CAACjF,SAAT,CAAmB,CAAnB,CAAD,CAAZ;AACH,GAND;;AAQA,QAAM2B,QAAQ,GAAG,MAAM;AACnB,QAAIsD,QAAQ,GAAG,IAAI9F,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,EAAqCC,GAArC,CAAyC,OAAzC,CAAf;;AACA,QAAG;AACC4F,MAAAA,QAAQ,GAAG3D,IAAI,CAACC,KAAL,CAAW0D,QAAX,CAAX;AACAC,MAAAA,iBAAiB,CAACD,QAAD,CAAjB;AACH,KAHD,CAGE,OAAOK,KAAP,EAAc;AACZN,MAAAA,iBAAiB,CAACC,QAAD,CAAjB;AACH;AACJ,GARD;;AAUA,QAAMM,cAAc,GAAI7H,IAAD,IAAU;AAC7B,UAAM8H,QAAQ,GAAG9H,IAAI,CAACwE,MAAL,CAAYxE,IAAI,IAAIA,IAAI,CAAC+H,KAAL,KAAejG,KAAf,IAAwB9B,IAAI,CAAC+G,IAAL,KAAcjF,KAA1D,CAAjB;AACAW,IAAAA,eAAe,CAACqF,QAAD,CAAf;AACH,GAHD;;AAKA,QAAME,cAAc,GAAIhI,IAAD,IAAU;AAC7B,QAAI8H,QAAQ,GAAG9H,IAAf;;AACA,UAAMiI,UAAU,GAAIxD,IAAD,IAAU;AACzB,UAAIyD,YAAY,GAAGhG,iBAAiB,CAAC6C,MAAlB,GAA2B,CAA3B,GAA+B7C,iBAAiB,CAACiG,IAAlB,CAAuBC,GAAG,IAAIA,GAAG,KAAK3D,IAAI,CAAC4D,IAA3C,CAA/B,GAAkF,IAArG;;AACA,UAAIH,YAAY,KAAKI,SAArB,EAAgC;AAC5BJ,QAAAA,YAAY,GAAG,KAAf;AACH;;AACD,YAAMK,SAAS,GAAGnG,MAAM,CAAC2C,MAAP,GAAgB,CAAhB,GAAoB3C,MAAM,CAACuC,QAAP,CAAgBF,IAAI,CAACsD,KAArB,CAApB,GAAkD,IAApE;AAEA,YAAMS,WAAW,GAAGxG,SAApB;AAEA,aAAOkG,YAAY,IAAIK,SAAhB,IAA6BC,WAApC;AACH,KAVD;;AAWAV,IAAAA,QAAQ,GAAG9H,IAAI,CAACwE,MAAL,CAAYxE,IAAI,IAAIiI,UAAU,CAACjI,IAAD,CAA9B,CAAX;AACAyC,IAAAA,eAAe,CAACqF,QAAD,CAAf;AACH,GAfD;;AAiBA,QAAM5D,UAAU,GAAIlE,IAAD,IAAU;AACzB,QAAI8B,KAAK,KAAK,EAAd,EAAkB;AACd+F,MAAAA,cAAc,CAAC7H,IAAD,CAAd;AACH,KAFD,MAEO;AACHgI,MAAAA,cAAc,CAAChI,IAAD,CAAd;AACH;AAEJ,GAPD;;AASA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAACyI,MAAAA,EAAE,EAAC;AAAJ,KAAT;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAmC,MAAA,cAAc,EAAC,QAAlD;AAA2D,MAAA,UAAU,EAAC,YAAtE;AAAmF,MAAA,SAAS,EAAEpH,OAAO,CAACH,gBAAtG;AAAwH,MAAA,KAAK,EAAC,MAA9H;AAAA,8BAEI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,mBACKU,YAAY,IAAI4E,eAAe,EADpC,EAEK,CAAC5E,YAAD,IAAiBgF,eAAe,EAFrC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOKnB,oBAAoB,EAPzB,eAWI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAACiD,UAAAA,EAAE,EAAC;AAAJ,SAAT;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,cAAc,EAAC,YAA/B;AAA4C,UAAA,UAAU,EAAC,QAAvD;AAAgE,UAAA,SAAS,EAAErH,OAAO,CAACsH,MAAnF;AAAA,qBACK9G,YAAY,IAAIW,YAAhB,IAAgCA,YAAY,CAACoG,GAAb,CAAiBnE,IAAI,iBAAI,QAAC,aAAD;AAAe,YAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,kBAAzB,CADrC,EAEK,CAAC5C,YAAD,IAAiBW,YAAjB,IAAiCA,YAAY,CAACoG,GAAb,CAAiBnE,IAAI,iBAAI,QAAC,aAAD;AAAe,YAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,kBAAzB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,EAmBK,CAAC,CAACjC,YAAD,IAAiBA,YAAY,CAACuC,MAAb,KAAwB,CAA1C,kBACG,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,UAAU,EAAC,QAA3B;AAAoC,QAAA,cAAc,EAAC,QAAnD;AAA4D,QAAA,EAAE,EAAE;AAAC8D,UAAAA,KAAK,EAAE;AAAR,SAAhE;AAA4E,QAAA,SAAS,EAAC,OAAtF;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA3TQzH,U;UACWJ,S,EACCZ,W,EACAC,W;;;KAHZe,U;AA6TT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Box from '@mui/material/Box';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { allSearchOptions, sportsList, categoryOptionsMap } from '../resources/constants';\nimport ResultCardOld from '../components/ResultCardOld';\nimport ResultCardNew from '../components/ResultCardNew';\n\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport SportsSoccerIcon from '@mui/icons-material/SportsSoccer';\nimport AppIconButton from '../components/AppIconButton.jsx';\nimport SearchBarOldVer from '../components/SearchBarOldVer.jsx';\nimport SearchBarNewVer from '../components/SearchBarNewVer.jsx';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: \"100vh\"\n    }\n}));\n\nfunction ResultPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const useOldSearch = (versionId == 1) || (versionId == 2);\n    const useOldResult = (versionId == 2) || (versionId == 4);\n\n    const [query, setQuery] = useState('');\n    const [available, setAvailable] = useState(true);\n    const [facilityLocations, setFacilityLocations] = useState([]);\n    const [sports, setSports] = useState([]);\n    const [dateRange, setDateRange] = useState({});\n    const [filteredData, setFilteredData] = useState([]);\n\n    const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n    const [searchCategory, setSearchCategory] = useState();\n\n    const [openSportDialog, setOpenSportDialog] = useState(false); // NEW VERSION\n    const [openLocationDialog, setOpenLocationDialog] = useState(false); // NEW VERSION\n    const [openFilterDialog, setOpenFilterDialog] = useState(false); // NEW VERSION\n\n    const [openPage, setOpenPage] = useState(false);\n    const [hasSearchValues, setHasSearchValues] = useState(false);\n    const [options, setOptions] = useState(allSearchOptions);\n    const [recentSearchList, setRecentSearchList] = useState(JSON.parse(window.localStorage.getItem('recentSearchList')));\n\n    useEffect(() => {\n        getQuery();\n        filterData(data);\n    }, [])\n\n    useEffect(() => {\n        filterData(data);\n    }, [query, available, facilityLocations, sports, dateRange])\n\n    const openCategoryOptionsDialog = category => {\n        setOpenCategoryOptions(true);\n    };\n\n    const closeCategoryOptionsDialog = () => {\n        setOpenCategoryOptions(false);\n        navigate(-1);\n    };\n\n    const updateSearchOptions = searchInput => {\n        setOptions(allSearchOptions.filter(item => item.toLowerCase().includes(searchInput.toLowerCase())));\n    };\n\n    const goToSearchResultPage = searchInput => {\n        navigate(`/facilities/result?version=${versionId}&query=${searchInput}`);\n    };\n\n    const updateHasSearchValues = input => {\n        setHasSearchValues(input && input.length > 0);\n    };\n\n    const updateRecentSearch = (newSearch) => {\n        if (newSearch.length > 0) {\n            updateHasSearchValues(newSearch);\n            const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n            if (!recentSearchList.includes(newSearch)) {\n                recentSearchList.unshift(newSearch);\n            } else if (recentSearchList.includes(newSearch)) {\n                const index = recentSearchList.indexOf(newSearch);\n                recentSearchList.splice(index, 1);\n                recentSearchList.unshift(newSearch);\n            }\n            window.localStorage.setItem('recentSearchList', JSON.stringify(recentSearchList));\n            setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        }\n    };\n\n    const doSearch = input => {\n        updateSearchOptions(input)\n        updateRecentSearch(input);\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        goToSearchResultPage(input);\n        setQuery(input);\n        closeCategoryOptionsDialog();\n    };\n\n    const renderCategoryDialog = () => {\n        return (\n            <CategoryOptionsDialog\n                doSearch={doSearch}\n                category={searchCategory}\n                open={openCategoryOptions}\n                fullScreen\n                handleClose={closeCategoryOptionsDialog}\n            />\n        );\n    };\n\n    const closeFilterDialog = type => {\n        setOpenFilterDialog(false);\n        navigate(-1);\n\n    };\n\n    const doOpenFilterDialog = type => {\n        setOpenFilterDialog(true);\n        setOpenPage(false);\n    };\n\n    const searchInputNew = useRef(null);\n\n    const isOldVersion = (versionId == 1) || (versionId == 2);\n    const LOCATION_TITLE = 'Location';\n    const SPORT_TITLE = 'Sport';\n\n    let listOptions = allSearchOptions; // categoryOptionsMap['Venue'] -- use the venue list instead as the name of the facilities\n    if (openSportDialog) {\n        listOptions = (categoryOptionsMap[SPORT_TITLE]);\n    } else if (openLocationDialog) {\n        listOptions = (categoryOptionsMap[LOCATION_TITLE]);\n    }\n\n    useEffect(() => {\n        if (window.localStorage.getItem('recentSearchList') === null) {\n            window.localStorage.setItem('recentSearchList', JSON.stringify([]));\n        }\n        if (openFilterDialog && openPage) {\n            setOpenPage(false);\n        }\n    }, [recentSearchList, options, openFilterDialog, openPage]);\n\n    const resetSearchInput = () => {\n        setHasSearchValues(false);\n        setOptions(listOptions);\n    };\n\n    const removeRecentSearch = item => {\n        const recentSearchList = JSON.parse(window.localStorage.getItem('recentSearchList'));\n        const newRecentSearchList = recentSearchList.filter(e => e != item);\n        window.localStorage.setItem('recentSearchList', JSON.stringify(newRecentSearchList));\n        setRecentSearchList(JSON.parse(window.localStorage.getItem('recentSearchList')));\n        updateHasSearchValues(false);\n    };\n\n    const openSearchPage = () => {\n        setOpenPage(true);\n    };\n\n    const closeSearchPage = () => {\n        resetSearchInput();\n        setOpenPage(false);\n    };\n\n    /* OLD VERSION OF FACILITIES PAGE (1 & 2) */\n    const renderSearchOld = () => {\n        return (\n            <Grid container alignItems=\"flex-start\" justifyContent=\"center\" className={classes.container}>\n                <SearchBarOldVer startSearch={openSearchPage} />\n            </Grid>\n        );\n    }\n    if (isOldVersion) {\n        return (\n            <Grid container alignItems=\"flex-start\" justifyContent=\"center\" className={classes.container}>\n                <SearchBarOldVer startSearch={openSearchPage} />\n            </Grid>\n        );\n    };\n\n    /* NEW VERSION OF FACILITIES PAGE (3 & 4) */\n    const doOpenCategoryDialog = type => {\n        if (type == SPORT_TITLE) {\n            setOpenSportDialog(true);\n            setOptions(categoryOptionsMap[SPORT_TITLE]);\n        } else if (type == LOCATION_TITLE) {\n            setOpenLocationDialog(true);\n            setOptions(categoryOptionsMap[LOCATION_TITLE]);\n        }\n    };\n\n    const closeCategoryDialog = type => {\n        setOptions(allSearchOptions);\n        if (openSportDialog) {\n            setOpenSportDialog(false);\n        } else if (openLocationDialog) {\n            setOpenLocationDialog(false);\n        }\n    };\n\n\n    const renderSearchNew = () => {\n        return (\n            <Grid item xs={12} className={`${classes.textAlignCenter}`}>\n                <SearchBarNewVer startSearch={openSearchPage} closeFilterDialog={closeFilterDialog} openFilterDialog={doOpenFilterDialog} />\n            </Grid>\n        );\n    };\n\n    const renderCategoryButton = (name, icon) => {\n        return <AppIconButton onClick={() => {doOpenCategoryDialog(name)}} name={name} icon={icon} />;\n    };\n\n    const renderCategoryButtons = () => {\n        return (\n            <Grid container item justifyContent='space-evenly' xs={12} className={`${classes.p4}`}>\n                <Grid item>\n                    {renderCategoryButton(LOCATION_TITLE, <LocationOnIcon fontSize='large' className={classes.mHalf} />)}\n                </Grid>\n                <Grid item>\n                    {renderCategoryButton(SPORT_TITLE, <SportsSoccerIcon fontSize='large' className={classes.mHalf} />)}\n                </Grid>\n            </Grid>\n        );\n    };\n\n    // RESULTS PAGE FILTER METHODS\n\n    const resetNewQueries = () => {\n        setAvailable(true);\n        setFacilityLocations([]);\n        setSports([]);\n        setDateRange({});\n    }\n\n    const resetOldQueries = () => {\n        setQuery('');\n    }\n\n    const handleStringQuery = (newQuery) => {\n        resetNewQueries();\n        if (sportsList.includes(newQuery)) {\n            setSearchCategory('Sport');\n        } else {\n            setSearchCategory('Venue');\n        }\n        setQuery(newQuery);\n    }\n\n    const handleObjectQuery = (newQuery) => {\n        resetOldQueries();\n        setAvailable(newQuery.Availability);\n        setFacilityLocations(newQuery.Location);\n        setSports(newQuery.Sports);\n        setDateRange(newQuery.dateRange[0]);\n    }\n\n    const getQuery = () => {\n        let newQuery = new URLSearchParams(location.search).get('query');\n        try{\n            newQuery = JSON.parse(newQuery);\n            handleObjectQuery(newQuery);\n        } catch (error) {\n            handleStringQuery(newQuery);\n        }\n    }\n\n    const filterOldQuery = (data) => {\n        const tempData = data.filter(data => data.sport === query || data.name === query);\n        setFilteredData(tempData);\n    }\n\n    const filterNewQuery = (data) => {\n        let tempData = data;\n        const isAccepted = (item) => {\n            let isLocationOK = facilityLocations.length > 0 ? facilityLocations.find(ele => ele === item.area) : true;\n            if (isLocationOK === undefined) {\n                isLocationOK = false;\n            }\n            const isSportOK = sports.length > 0 ? sports.includes(item.sport) : true;\n\n            const isAvailable = available;\n\n            return isLocationOK && isSportOK && isAvailable;\n        }\n        tempData = data.filter(data => isAccepted(data));\n        setFilteredData(tempData);\n    }\n\n    const filterData = (data) => {\n        if (query !== '') {\n            filterOldQuery(data);\n        } else {\n            filterNewQuery(data);\n        }\n\n    }\n\n    return (\n        <Box sx={{mt:1}}>\n            <Grid container direction=\"column\" justifyContent=\"centre\" alignItems=\"flex-start\" className={classes.fullScreenHeight} width='100%'>\n                {/* SEARCH BAR */}\n                <Box width=\"95%\">\n                    {useOldSearch && renderSearchOld()}\n                    {!useOldSearch && renderSearchNew()}\n                </Box>\n\n                {renderCategoryDialog()}\n\n\n                {/* RESULTS PAGE */}\n                <Box sx={{ml:1}}>\n                    <Grid container justifyContent=\"flex-start\" alignItems=\"centre\" className={classes.mt1mb8}>\n                        {useOldResult && filteredData && filteredData.map(item => <ResultCardOld data={item}/>)}\n                        {!useOldResult && filteredData && filteredData.map(item => <ResultCardNew data={item}/>)}\n                    </Grid>\n                </Box>\n\n\n                {(!filteredData || filteredData.length === 0) &&\n                    <Grid container alignItems='center' justifyContent='center' sx={{width: 1}} minHeight='150px'>\n                        <Typography>There are no results found.</Typography>\n                    </Grid>\n\n                }\n\n            </Grid>\n        </Box>\n    );\n}\n\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}