{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/ScrollCalendar.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport data from './data/data.json';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport swimming from '../static/swimming.jpg';\nimport ScrollCalendarCardOld from '../components/CalendarCardOld';\nimport ScrollCalendarCardNew from '../components/CalendarCardNew';\nimport TimeSlotCards from '../components/TimeSlotCard';\nimport HeaderSectionOld from '../components/FacilitiesViewHeaderOld';\nimport HeaderSectionNew from '../components/FacilitiesViewHeaderNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ScrollCalendar(_ref) {\n  let {\n    dates\n  } = _ref;\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const useOldResult = versionId == 2 || versionId == 4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      sx: {\n        ml: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1\n        },\n        children: [useOldResult && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"April 2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 38\n        }, this), !useOldResult && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          sx: {\n            mb: 0,\n            mt: 1,\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            inline: true,\n            align: \"left\",\n            gutterBottom: true,\n            variant: \"h6\",\n            sx: {\n              fontWeight: 600\n            },\n            children: \"Select a date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            inline: true,\n            gutterBottom: true,\n            variant: \"caption\",\n            align: \"right\",\n            sx: {\n              mr: 5\n            },\n            children: \"April 2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"flex-start\",\n        justifyContent: \"flex-start\",\n        children: [useOldResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ScrollCalendarCardOld, {\n            date: '14 April',\n            selectedDate: selectedDate,\n            setSelectedDate: setSelectedDate,\n            setSelectedTime: setSelectedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), dates.map(item => /*#__PURE__*/_jsxDEV(ScrollCalendarCardOld, {\n            date: item.date,\n            selectedDate: selectedDate,\n            setSelectedDate: setSelectedDate,\n            setSelectedTime: setSelectedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 44\n          }, this))]\n        }, void 0, true), !useOldResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ScrollCalendarCardNew, {\n            date: '14 April',\n            selectedDate: selectedDate,\n            setSelectedDate: setSelectedDate,\n            setSelectedTime: setSelectedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), dates.map(item => /*#__PURE__*/_jsxDEV(ScrollCalendarCardNew, {\n            date: item.date,\n            selectedDate: selectedDate,\n            setSelectedDate: setSelectedDate,\n            setSelectedTime: setSelectedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 44\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = ScrollCalendar;\nexport default ScrollCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollCalendar\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/ScrollCalendar.jsx"],"names":["React","useEffect","useState","useParams","useLocation","useNavigate","data","makeStyles","Grid","Typography","Box","Divider","Drawer","Button","LocationOnIcon","KeyboardArrowDownIcon","swimming","ScrollCalendarCardOld","ScrollCalendarCardNew","TimeSlotCards","HeaderSectionOld","HeaderSectionNew","ScrollCalendar","dates","versionId","URLSearchParams","location","search","get","useOldResult","ml","mt","mb","justifyContent","fontWeight","mr","selectedDate","setSelectedDate","setSelectedTime","map","item","date"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport data from './data/data.json';\n\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\nimport swimming from '../static/swimming.jpg';\nimport ScrollCalendarCardOld from '../components/CalendarCardOld';\nimport ScrollCalendarCardNew from '../components/CalendarCardNew';\nimport TimeSlotCards from '../components/TimeSlotCard';\nimport HeaderSectionOld from '../components/FacilitiesViewHeaderOld';\nimport HeaderSectionNew from '../components/FacilitiesViewHeaderNew';\n\nfunction ScrollCalendar({dates}){\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const useOldResult = (versionId == 2) || (versionId == 4);\n    return (\n        <>\n            <Grid container direction=\"column\" sx={{ml: 2}}>\n                <Box sx={{mt: 1}}>\n                    {useOldResult && <Typography variant=\"h6\">April 2022</Typography>}\n                    {!useOldResult && (\n                        <Grid container sx={{mb: 0, mt: 1, justifyContent: 'space-between'}} >\n                            <Typography inline align=\"left\" gutterBottom variant=\"h6\" sx={{fontWeight: 600}}>\n                                Select a date\n                            </Typography>\n                            <Typography inline gutterBottom variant=\"caption\" align=\"right\" sx={{mr: 5}}>\n                                April 2022\n                            </Typography>\n                        </Grid>\n                    )}\n                </Box>\n\n                <Grid container direction=\"row\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\n                    {useOldResult &&  (\n                        <>\n                        <ScrollCalendarCardOld date={'14 April'} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime}/>\n                        {dates.map(item => <ScrollCalendarCardOld date={item.date} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime} />)}\n                        </>\n                    )}\n\n                    {!useOldResult &&  (\n                        <>\n                        <ScrollCalendarCardNew date={'14 April'} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime}/>\n                        {dates.map(item => <ScrollCalendarCardNew date={item.date} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime} />)}\n                        </>\n                    )}\n\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default ScrollCalendar;"]},"metadata":{},"sourceType":"module"}