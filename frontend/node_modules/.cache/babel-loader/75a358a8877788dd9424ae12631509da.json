{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilityViewPage.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport data from './data/data.json';\nimport moment from 'moment';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport swimming from '../static/swimming.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: 'calc(100vh - 56px)'\n  }\n}));\n\nfunction FacilityViewPage() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const [facility, setFacility] = useState('');\n  const [sport, setSport] = useState('');\n  const [availability, setAvailability] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('14 April');\n  const [timeSlots, setTimeSlot] = useState([]);\n\n  const getQuery = () => {\n    const newQuery = new URLSearchParams(location.search).get('location');\n    setFacility(newQuery);\n    console.log(facility);\n  };\n\n  const getAvailability = data => {\n    const currFacilityInfo = data.filter(data => data.name === facility);\n\n    if (currFacilityInfo[0]) {\n      setSport(currFacilityInfo[0]['sport']);\n      setAvailability(currFacilityInfo[0]['availability']);\n    }\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n  useEffect(() => {\n    getAvailability(data);\n  }, [facility]);\n\n  const handleCalendarCardClick = currDate => {\n    console.log('Click on Calendar Card: ' + currDate);\n    setSelectedDate(currDate);\n\n    if (currDate === '14 April') {\n      setTimeSlot([]);\n    } else {\n      const t = availability.filter(avail => avail['date'] === selectedDate);\n      console.log(t);\n      setTimeSlot([]);\n    }\n  };\n\n  useEffect(() => {\n    let t = availability.filter(avail => avail['date'] === selectedDate);\n    console.log(t);\n    t = t[0]['time'];\n    console.log(t);\n    setTimeSlot(t);\n  }, [selectedDate]);\n\n  const renderHeaderSection = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            ml: 1,\n            mb: 2,\n            width: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: [facility, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              ml: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [sport, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(LocationOnIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mr: 2,\n              alignContent: 'stretch'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                mb: 1\n              },\n              children: \"More \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const ScrollCalendarCard = _ref => {\n    let {\n      date\n    } = _ref;\n    const currDate = date;\n    const day = new Date(date + ' 2022').toLocaleString('en-us', {\n      weekday: 'short'\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          padding: '12px',\n          justifyContent: 'center'\n        },\n        style: {\n          border: \"none\",\n          boxShadow: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => handleCalendarCardClick(currDate),\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              padding: '0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: currDate.split(' ')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), currDate === selectedDate ? /*#__PURE__*/_jsxDEV(Divider, {\n              style: {\n                background: 'black'\n              },\n              sx: {\n                borderBottomWidth: '5px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: '5px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const renderScrollCalendar = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        sx: {\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"April 2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"flex-start\",\n          justifyContent: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(ScrollCalendarCard, {\n            date: '14 April'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), availability.map(item => /*#__PURE__*/_jsxDEV(ScrollCalendarCard, {\n            date: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 51\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const TimeSlotCards = _ref2 => {\n    let {\n      dataArr\n    } = _ref2;\n    const time = moment(Object.keys(dataArr), 'hh:mm a').format('hh:mm a');\n    const availability = Object.values(dataArr);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          padding: '12px',\n          justifyContent: 'center'\n        },\n        style: {\n          border: \"red\",\n          boxShadow: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              padding: '0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [availability, \" left\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const TimeSlots = _ref3 => {\n    _s();\n\n    let {\n      timeSlots\n    } = _ref3;\n    console.log(timeSlots);\n    const [internalTimeSlots, setInternalTimeSlot] = useState([]);\n    useEffect(() => {\n      setInternalTimeSlot(timeSlots);\n    }, [timeSlots]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        sx: {\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"flex-start\",\n          justifyContent: \"flex-start\",\n          children: internalTimeSlots.map(item => /*#__PURE__*/_jsxDEV(TimeSlotCards, {\n            dataArr: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 56\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  _s(TimeSlots, \"fyeCjET3erExH7NBGuioTMY0gCM=\");\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    className: classes.fullScreenHeight,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"img\",\n      sx: {\n        width: 1,\n        maxHeight: '150px'\n      },\n      src: swimming\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), renderHeaderSection(), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\",\n      sx: {\n        width: 0.9\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), renderScrollCalendar(), /*#__PURE__*/_jsxDEV(TimeSlots, {\n      timeSlots: timeSlots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(FacilityViewPage, \"aLkLr1g+sKlt9XWPYRmI7Bkb1Qc=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = FacilityViewPage;\nexport default FacilityViewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityViewPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilityViewPage.jsx"],"names":["React","useEffect","useState","useParams","useLocation","useNavigate","data","moment","makeStyles","Grid","Typography","Box","Divider","Card","CardContent","CardActionArea","LocationOnIcon","KeyboardArrowDownIcon","swimming","useStyles","theme","fullScreenHeight","minHeight","FacilityViewPage","classes","location","facility","setFacility","sport","setSport","availability","setAvailability","selectedDate","setSelectedDate","timeSlots","setTimeSlot","getQuery","newQuery","URLSearchParams","search","get","console","log","getAvailability","currFacilityInfo","filter","name","handleCalendarCardClick","currDate","t","avail","renderHeaderSection","ml","mb","width","mr","alignContent","ScrollCalendarCard","date","day","Date","toLocaleString","weekday","padding","justifyContent","border","boxShadow","split","background","borderBottomWidth","height","renderScrollCalendar","map","item","TimeSlotCards","dataArr","time","Object","keys","format","values","TimeSlots","internalTimeSlots","setInternalTimeSlot","maxHeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport data from './data/data.json';\nimport moment from 'moment';\n\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\nimport swimming from '../static/swimming.jpg';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: 'calc(100vh - 56px)'\n    }\n}));\n\nfunction FacilityViewPage() {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const [facility, setFacility] = useState('');\n    const [sport, setSport] = useState('');\n    const [availability, setAvailability] = useState([]);\n    const [selectedDate, setSelectedDate] = useState('14 April');\n    const [timeSlots, setTimeSlot] = useState([]);\n\n    const getQuery = () => {\n        const newQuery = new URLSearchParams(location.search).get('location');\n        setFacility(newQuery);\n        console.log(facility);\n    }\n\n    const getAvailability = (data) => {\n        const currFacilityInfo = data.filter(data => data.name === facility);\n        if (currFacilityInfo[0]) {\n            setSport(currFacilityInfo[0]['sport']);\n            setAvailability(currFacilityInfo[0]['availability']);\n        }\n    }\n\n    useEffect(() => {\n        getQuery();\n    }, []);\n\n    useEffect(() => {\n        getAvailability(data);\n    }, [facility]);\n\n    const handleCalendarCardClick = (currDate) => {\n        console.log('Click on Calendar Card: ' + currDate);\n        setSelectedDate(currDate);\n        if (currDate === '14 April') {\n            setTimeSlot([]);\n        } else {\n            const t = availability.filter(avail => avail['date'] === selectedDate);\n            console.log(t);\n            setTimeSlot([]);\n        }\n\n    }\n\n    useEffect(() => {\n        let t = availability.filter(avail => avail['date'] === selectedDate);\n        console.log(t);\n        t = t[0]['time'];\n        console.log(t);\n        setTimeSlot(t);\n    }, [selectedDate])\n\n    const renderHeaderSection = () => {\n        return (\n            <>\n                <Grid container alignItems=\"flex-start\">\n                    <Box sx={{ml:1, mb: 2, width: 1}}>\n                        <Typography variant=\"h3\">{facility} </Typography>\n                    </Box>\n                    <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n                        <Box sx={{ml:2}} >\n                            <Typography variant=\"caption\">{sport} </Typography>\n                        </Box>\n                        <Box>\n                            <LocationOnIcon />\n                        </Box>\n                        <Box sx={{mr: 2, alignContent: 'stretch' }} >\n                            <Typography variant=\"caption\" sx={{mb:1}}>More </Typography>\n                            <KeyboardArrowDownIcon />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n\n    const ScrollCalendarCard = ({date}) => {\n\n        const currDate = date;\n        const day = new Date(date + ' 2022').toLocaleString('en-us', {weekday:'short'})\n\n        return (\n            <>\n                <Card sx={{padding: '12px', justifyContent: 'center'}} style={{ border: \"none\", boxShadow: \"none\" }}>\n                    <CardActionArea onClick={() => handleCalendarCardClick(currDate)}>\n                        <CardContent sx={{padding: '0'}}>\n                            <Typography>{day}</Typography>\n                            <Typography>{currDate.split(' ')[0]}</Typography>\n                            {(currDate === selectedDate) ?\n                                <Divider style={{ background: 'black' }} sx={{ borderBottomWidth: '5px', width: '100%'}}/>\n                            : <Box sx={{ height: '5px', width: '100%'}}/>}\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </>\n        );\n    }\n\n    const renderScrollCalendar = () => {\n        return (\n            <>\n                <Grid container direction=\"column\" sx={{ml: 2}}>\n                    <Box>\n                        <Typography variant=\"h6\">April 2022</Typography>\n                    </Box>\n                    <Grid container direction=\"row\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\n                        <ScrollCalendarCard date={'14 April'} />\n                        {availability.map(item => <ScrollCalendarCard date={item.date} />)}\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n    const TimeSlotCards = ({dataArr}) => {\n        const time = moment(Object.keys(dataArr), 'hh:mm a').format('hh:mm a');\n        const availability = Object.values(dataArr);\n\n        return (\n            <>\n                <Card sx={{padding: '12px', justifyContent: 'center'}} style={{ border: \"red\", boxShadow: \"none\" }}>\n                    <CardActionArea>\n                        <CardContent sx={{padding: '0'}}>\n                            <Typography>{time}</Typography>\n                            <Typography>{availability} left</Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </>\n        )\n    }\n\n    const TimeSlots = ({timeSlots}) => {\n        console.log(timeSlots);\n        const [internalTimeSlots, setInternalTimeSlot] = useState([]);\n\n        useEffect(() => {\n            setInternalTimeSlot(timeSlots);\n        }, [timeSlots])\n\n        return (\n            <>\n                <Grid container direction=\"column\" sx={{ml: 2}}>\n                    <Box>\n                        <Typography>Slot</Typography>\n                    </Box>\n                    <Grid container direction=\"row\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\n                        {internalTimeSlots.map(item => <TimeSlotCards dataArr={item} />)}\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n\n    return (\n        <Grid container justifyContent=\"flex-start\" alignItems=\"center\" className={classes.fullScreenHeight}>\n            <Box\n                component=\"img\"\n                sx={{width: 1, maxHeight: '150px'}}\n                src={swimming} />\n            {renderHeaderSection()}\n            <Divider variant=\"middle\" sx={{width: 0.9}}/>\n            {renderScrollCalendar()}\n            <TimeSlots timeSlots={timeSlots} />\n        </Grid>\n    );\n}\n\nexport default FacilityViewPage;"]},"metadata":{},"sourceType":"module"}