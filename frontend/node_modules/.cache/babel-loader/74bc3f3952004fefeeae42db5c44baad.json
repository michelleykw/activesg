{"ast":null,"code":"// ------------------------ IMPORT ------------------------ //\n// Copy this:\n// import { sendNetworkLog } from '../logging/logging.js';\n// Modify the path accordingly.\n// ------------------------ PARAMETERS ------------------------ //\n// eventname: The trigger (e.g. 'Click on Search Bar')\n// target: The button that was clicked (e.g. 'Bishan Sports Hall Card')\n// info: anything\n// log_version: versionId (1-4)\n// Note: UUID and timestamp are automatically generated.\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction getUUID() {\n  if (window.localStorage.getItem('UUID') === null) {\n    window.localStorage.setItem('UUID', uuidv4());\n  }\n\n  return window.localStorage.getItem('UUID');\n}\n\nfunction getCurrentTimeStamp() {\n  const oldDate = Date.parse('29 Mar 2022 00:00:00 GMT');\n  var secondBetweenTwoDate = Math.abs((new Date().getTime() - oldDate.getTime()) / 1000);\n  return secondBetweenTwoDate;\n} // Logging submission function\n// submits to the google form at this URL:\n// docs.google.com/forms/d/e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww/viewform?usp=sf_link\n\n\nexport function sendNetworkLog(eventname, target, info, log_version) {\n  var formid = \"e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww\";\n  var data = {\n    \"entry.1493906674\": getUUID(),\n    \"entry.1999783829\": getCurrentTimeStamp(),\n    \"entry.115923075\": eventname,\n    \"entry.631695359\": target,\n    \"entry.206432095\": info,\n    \"entry.389866351\": log_version\n  };\n  var params = [];\n\n  for (const key in data) {\n    params.push(key + \"=\" + encodeURIComponent(data[key]));\n  } // Submit the form using an image to avoid CORS warnings; warning may still happen, but log will be sent. Go check result in Google Form\n\n\n  new Image().src = \"https://docs.google.com/forms/d/\" + formid + \"/formResponse?\" + params.join(\"&\");\n}","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/logging/logging.js"],"names":["v4","uuidv4","getUUID","window","localStorage","getItem","setItem","getCurrentTimeStamp","oldDate","Date","parse","secondBetweenTwoDate","Math","abs","getTime","sendNetworkLog","eventname","target","info","log_version","formid","data","params","key","push","encodeURIComponent","Image","src","join"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,SAASC,OAAT,GAAmB;AACf,MAAIC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,MAAwC,IAA5C,EAAkD;AAC9CF,IAAAA,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4B,MAA5B,EAAoCL,MAAM,EAA1C;AACH;;AACD,SAAOE,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAP;AACH;;AAED,SAASE,mBAAT,GAA+B;AAC3B,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,0BAAX,CAAhB;AACA,MAAIC,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAC,IAAIJ,IAAJ,GAAWK,OAAX,KAAuBN,OAAO,CAACM,OAAR,EAAxB,IAA6C,IAAtD,CAA3B;AACA,SAAOH,oBAAP;AACH,C,CAED;AACA;AACA;;;AACA,OAAO,SAASI,cAAT,CACHC,SADG,EAEHC,MAFG,EAGHC,IAHG,EAIHC,WAJG,EAIU;AACf,MAAIC,MAAM,GAAG,4DAAb;AACA,MAAIC,IAAI,GAAG;AACT,wBAAoBnB,OAAO,EADlB;AAET,wBAAoBK,mBAAmB,EAF9B;AAGT,uBAAmBS,SAHV;AAIT,uBAAmBC,MAJV;AAKT,uBAAmBC,IALV;AAMT,uBAAmBC;AANV,GAAX;AAQA,MAAIG,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,IAAAA,MAAM,CAACE,IAAP,CAAYD,GAAG,GAAG,GAAN,GAAYE,kBAAkB,CAACJ,IAAI,CAACE,GAAD,CAAL,CAA1C;AACD,GAbc,CAcf;;;AACC,MAAIG,KAAJ,EAAD,CAAYC,GAAZ,GAAkB,qCAAqCP,MAArC,GACf,gBADe,GACIE,MAAM,CAACM,IAAP,CAAY,GAAZ,CADtB;AAED","sourcesContent":["// ------------------------ IMPORT ------------------------ //\n// Copy this:\n// import { sendNetworkLog } from '../logging/logging.js';\n// Modify the path accordingly.\n\n// ------------------------ PARAMETERS ------------------------ //\n// eventname: The trigger (e.g. 'Click on Search Bar')\n// target: The button that was clicked (e.g. 'Bishan Sports Hall Card')\n// info: anything\n// log_version: versionId (1-4)\n\n// Note: UUID and timestamp are automatically generated.\n\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction getUUID() {\n    if (window.localStorage.getItem('UUID') === null) {\n        window.localStorage.setItem('UUID', uuidv4());\n    }\n    return window.localStorage.getItem('UUID');\n}\n\nfunction getCurrentTimeStamp() {\n    const oldDate = Date.parse('29 Mar 2022 00:00:00 GMT');\n    var secondBetweenTwoDate = Math.abs((new Date().getTime() - oldDate.getTime()) / 1000);\n    return secondBetweenTwoDate;\n}\n\n// Logging submission function\n// submits to the google form at this URL:\n// docs.google.com/forms/d/e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww/viewform?usp=sf_link\nexport function sendNetworkLog(\n    eventname,\n    target,\n    info,\n    log_version) {\n  var formid = \"e/1FAIpQLSfa2rk1aLNQ9UnV9uWh5vWwitK1z3ukAn6gg-w_UOdHvebgww\";\n  var data = {\n    \"entry.1493906674\": getUUID(),\n    \"entry.1999783829\": getCurrentTimeStamp(),\n    \"entry.115923075\": eventname,\n    \"entry.631695359\": target,\n    \"entry.206432095\": info,\n    \"entry.389866351\": log_version\n  };\n  var params = [];\n  for (const key in data) {\n    params.push(key + \"=\" + encodeURIComponent(data[key]));\n  }\n  // Submit the form using an image to avoid CORS warnings; warning may still happen, but log will be sent. Go check result in Google Form\n  (new Image).src = \"https://docs.google.com/forms/d/\" + formid +\n     \"/formResponse?\" + params.join(\"&\");\n}"]},"metadata":{},"sourceType":"module"}