{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport swimming from '../static/swimming.jpg';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport SearchBar from '../components/SearchBar.jsx';\nimport { sportsList } from '../resources/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: \"100vh\"\n  }\n}));\n\nfunction ResultPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const isOldVersion = versionId == 1 || versionId == 2;\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n  const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n  const [searchCategory, setSearchCategory] = useState();\n\n  const openCategoryOptionsDialog = category => {\n    setOpenCategoryOptions(true); // setSearchCategory(category);\n  };\n\n  const closeCategoryOptionsDialog = () => {\n    setOpenCategoryOptions(false); // setSearchCategory(null);\n  };\n\n  const doRecentSearch = () => {};\n\n  const renderCategoryDialog = () => {\n    return /*#__PURE__*/_jsxDEV(CategoryOptionsDialog, {\n      doSearch: doRecentSearch,\n      category: searchCategory,\n      open: openCategoryOptions,\n      fullScreen: true,\n      handleClose: closeCategoryOptionsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getQuery = () => {\n    const newQuery = new URLSearchParams(location.search).get('query');\n\n    if (sportsList.includes(newQuery)) {\n      setSearchCategory('sports');\n    } else {\n      setSearchCategory('venue');\n    }\n\n    setQuery(newQuery);\n  };\n\n  const filterData = data => {\n    const tempData = data.filter(data => data.sport === query || data.name === query);\n    setFilteredData(tempData);\n  };\n\n  useEffect(() => {\n    getQuery();\n    filterData(data);\n  }, []);\n\n  const goToFacilityViewPage = loc => {\n    navigate(`/facilities/view?version=${versionId}&location=${loc}`);\n  };\n\n  const renderCard = data => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 220,\n        m: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => goToFacilityViewPage(data.name),\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"90\",\n          src: swimming,\n          alt: data.sport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: data.sport\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"caption\",\n            component: \"div\",\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: \"0.0km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.fullScreenHeight,\n    children: [isOldVersion && /*#__PURE__*/_jsxDEV(SearchBar, {\n      startSearch: openCategoryOptionsDialog,\n      hasSearchValues: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), renderCategoryDialog(), filteredData && filteredData.map(item => renderCard(item)), (!filteredData || filteredData.length === 0) && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"There are no results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultPage, \"r2sxzpPMB7Kkzkhewj3MieYigy8=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx"],"names":["React","useEffect","useState","makeStyles","Grid","Typography","data","Card","CardContent","CardMedia","CardActionArea","swimming","CategoryOptionsDialog","useParams","useLocation","useNavigate","SearchBar","sportsList","useStyles","theme","fullScreenHeight","minHeight","ResultPage","classes","location","navigate","versionId","URLSearchParams","search","get","isOldVersion","filteredData","setFilteredData","query","setQuery","openCategoryOptions","setOpenCategoryOptions","searchCategory","setSearchCategory","openCategoryOptionsDialog","category","closeCategoryOptionsDialog","doRecentSearch","renderCategoryDialog","getQuery","newQuery","includes","filterData","tempData","filter","sport","name","goToFacilityViewPage","loc","renderCard","maxWidth","m","map","item","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,kBAApD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAACgB,KAAK,KAAK;AACnCC,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,SAAS,EAAE;AADG;AADiB,CAAL,CAAN,CAA5B;;AAMA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,SAAS,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,EAAqCC,GAArC,CAAyC,SAAzC,KAAuD,CAAzE;AACA,QAAMC,YAAY,GAAIJ,SAAS,IAAI,CAAd,IAAqBA,SAAS,IAAI,CAAvD;AAEA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACiC,mBAAD,EAAsBC,sBAAtB,IAAgDlC,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACmC,cAAD,EAAiBC,iBAAjB,IAAsCpC,QAAQ,EAApD;;AAEA,QAAMqC,yBAAyB,GAAGC,QAAQ,IAAI;AAC1CJ,IAAAA,sBAAsB,CAAC,IAAD,CAAtB,CAD0C,CAE1C;AACH,GAHD;;AAKA,QAAMK,0BAA0B,GAAG,MAAM;AACrCL,IAAAA,sBAAsB,CAAC,KAAD,CAAtB,CADqC,CAErC;AACH,GAHD;;AAKA,QAAMM,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AAC/B,wBACI,QAAC,qBAAD;AACI,MAAA,QAAQ,EAAED,cADd;AAEI,MAAA,QAAQ,EAAEL,cAFd;AAGI,MAAA,IAAI,EAAEF,mBAHV;AAII,MAAA,UAAU,MAJd;AAKI,MAAA,WAAW,EAAEM;AALjB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD;;AAYA,QAAMG,QAAQ,GAAG,MAAM;AACnB,UAAMC,QAAQ,GAAG,IAAIlB,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,EAAqCC,GAArC,CAAyC,OAAzC,CAAjB;;AACA,QAAIZ,UAAU,CAAC6B,QAAX,CAAoBD,QAApB,CAAJ,EAAmC;AAC/BP,MAAAA,iBAAiB,CAAC,QAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACH;;AACDJ,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACH,GARD;;AAUA,QAAME,UAAU,GAAIzC,IAAD,IAAU;AACzB,UAAM0C,QAAQ,GAAG1C,IAAI,CAAC2C,MAAL,CAAY3C,IAAI,IAAIA,IAAI,CAAC4C,KAAL,KAAejB,KAAf,IAAwB3B,IAAI,CAAC6C,IAAL,KAAclB,KAA1D,CAAjB;AACAD,IAAAA,eAAe,CAACgB,QAAD,CAAf;AACH,GAHD;;AAKA/C,EAAAA,SAAS,CAAC,MAAM;AACZ2C,IAAAA,QAAQ;AACRG,IAAAA,UAAU,CAACzC,IAAD,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAM8C,oBAAoB,GAAGC,GAAG,IAAI;AAChC5B,IAAAA,QAAQ,CAAE,4BAA2BC,SAAU,aAAY2B,GAAI,EAAvD,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAGhD,IAAI,IAAI;AACvB,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEiD,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,CAAC,EAAC;AAAnB,OAAV;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,MAAMJ,oBAAoB,CAAC9C,IAAI,CAAC6C,IAAN,CAAnD;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,SAAS,EAAC,KADd;AAEI,UAAA,MAAM,EAAC,IAFX;AAGI,UAAA,GAAG,EAAIxC,QAHX;AAII,UAAA,GAAG,EAAEL,IAAI,CAAC4C;AAJd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,WAAD;AAAA,kCACA,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAA8B,YAAA,KAAK,EAAC,gBAApC;AAAA,sBACK5C,IAAI,CAAC4C;AADV;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,SAAjC;AAA2C,YAAA,SAAS,EAAC,KAArD;AAAA,sBACK5C,IAAI,CAAC6C;AADV;AAAA;AAAA;AAAA;AAAA,kBAJA,eAOA,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAA8B,YAAA,KAAK,EAAC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH,GAxBD;;AA0BA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,SAAS,EAAE5B,OAAO,CAACH,gBAAvD;AAAA,eACKU,YAAY,iBACT,QAAC,SAAD;AAAW,MAAA,WAAW,EAAES,yBAAxB;AAAmD,MAAA,eAAe,EAAEN;AAApE;AAAA;AAAA;AAAA;AAAA,YAFR,EAKKU,oBAAoB,EALzB,EAOKZ,YAAY,IAAIA,YAAY,CAAC0B,GAAb,CAAiBC,IAAI,IAAIJ,UAAU,CAACI,IAAD,CAAnC,CAPrB,EAQK,CAAC,CAAC3B,YAAD,IAAiBA,YAAY,CAAC4B,MAAb,KAAwB,CAA1C,kBAAgD,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARrD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAtGQrC,U;UACWJ,S,EACCJ,W,EACAC,W;;;KAHZO,U;AAwGT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport swimming from '../static/swimming.jpg';\nimport CategoryOptionsDialog from '../components/CategoryOptionsDialog';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport SearchBar from '../components/SearchBar.jsx';\nimport { sportsList } from '../resources/constants';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: \"100vh\"\n    }\n}));\n\nfunction ResultPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const isOldVersion = (versionId == 1) || (versionId == 2);\n\n    const [filteredData, setFilteredData] = useState([]);\n    const [query, setQuery] = useState('');\n\n    const [openCategoryOptions, setOpenCategoryOptions] = useState(false);\n    const [searchCategory, setSearchCategory] = useState();\n\n    const openCategoryOptionsDialog = category => {\n        setOpenCategoryOptions(true);\n        // setSearchCategory(category);\n    };\n\n    const closeCategoryOptionsDialog = () => {\n        setOpenCategoryOptions(false);\n        // setSearchCategory(null);\n    };\n\n    const doRecentSearch = () => {\n\n    }\n\n    const renderCategoryDialog = () => {\n        return (\n            <CategoryOptionsDialog\n                doSearch={doRecentSearch}\n                category={searchCategory}\n                open={openCategoryOptions}\n                fullScreen\n                handleClose={closeCategoryOptionsDialog}\n            />\n        );\n    };\n\n    const getQuery = () => {\n        const newQuery = new URLSearchParams(location.search).get('query');\n        if (sportsList.includes(newQuery)) {\n            setSearchCategory('sports');\n        } else {\n            setSearchCategory('venue');\n        }\n        setQuery(newQuery);\n    }\n\n    const filterData = (data) => {\n        const tempData = data.filter(data => data.sport === query || data.name === query);\n        setFilteredData(tempData);\n    }\n\n    useEffect(() => {\n        getQuery();\n        filterData(data);\n    }, [])\n\n    const goToFacilityViewPage = loc => {\n        navigate(`/facilities/view?version=${versionId}&location=${loc}`);\n    };\n\n    const renderCard = data => {\n        return (\n            <Card sx={{ maxWidth: 220, m:1}}>\n                <CardActionArea onClick={() => goToFacilityViewPage(data.name)}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"90\"\n                        src = {swimming}\n                        alt={data.sport}\n                    />\n                    <CardContent>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                        {data.sport}\n                    </Typography>\n                    <Typography gutterBottom variant=\"caption\" component=\"div\">\n                        {data.name}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                        0.0km\n                    </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        );\n    }\n\n    return (\n        <Grid container alignItems=\"center\" className={classes.fullScreenHeight}>\n            {isOldVersion && (\n                <SearchBar startSearch={openCategoryOptionsDialog} hasSearchValues={query} />\n            )}\n\n            {renderCategoryDialog()}\n\n            {filteredData && filteredData.map(item => renderCard(item))}\n            {(!filteredData || filteredData.length === 0) && <Typography>There are no results found.</Typography>}\n        </Grid>\n    );\n}\n\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}