{"ast":null,"code":"import React,{useEffect,useState}from'react';import{makeStyles,useTheme}from'@mui/styles';import{Link,useNavigate,useLocation}from'react-router-dom';import{Button,Dialog,ListItemText,ListItem,List,Divider,AppBar,Toolbar,IconButton,Typography}from'@mui/material';import CloseIcon from'@mui/icons-material/Close';import{categoryOptionsMap}from'../resources/constants.jsx';import SearchList from'../components/SearchList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{};});function CategoryOptionsDialog(_ref){var category=_ref.category,doSearch=_ref.doSearch,open=_ref.open,_ref$fullScreen=_ref.fullScreen,fullScreen=_ref$fullScreen===void 0?false:_ref$fullScreen,handleClose=_ref.handleClose;var classes=useStyles();var theme=useTheme();var location=useLocation();var navigate=useNavigate();var renderDialogHeader=function renderDialogHeader(){return/*#__PURE__*/_jsx(AppBar,{sx:{position:'fixed',color:theme.palette.text.primary,background:theme.palette.common.white},elevation:0,children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{sx:{ml:2,flex:1,fontWeight:600,textAlign:'center'},variant:\"h6\",component:\"div\",children:\"Select a \".concat(category)}),/*#__PURE__*/_jsx(IconButton,{edge:\"end\",color:\"inherit\",onClick:handleClose,\"aria-label\":\"close\",children:/*#__PURE__*/_jsx(CloseIcon,{})})]})});};return/*#__PURE__*/_jsxs(Dialog,{fullScreen:fullScreen,open:open,onClose:handleClose,children:[renderDialogHeader(),/*#__PURE__*/_jsx(SearchList,{fullScreen:fullScreen,list:categoryOptionsMap[category],search:doSearch})]});}export default CategoryOptionsDialog;","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/CategoryOptionsDialog.jsx"],"names":["React","useEffect","useState","makeStyles","useTheme","Link","useNavigate","useLocation","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","categoryOptionsMap","SearchList","useStyles","theme","CategoryOptionsDialog","category","doSearch","open","fullScreen","handleClose","classes","location","navigate","renderDialogHeader","position","color","palette","text","primary","background","common","white","ml","flex","fontWeight","textAlign"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,aAArC,CACA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,WAA5B,KAA+C,kBAA/C,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,YAAzB,CAAuCC,QAAvC,CAAiDC,IAAjD,CAAuDC,OAAvD,CAAgEC,MAAhE,CAAwEC,OAAxE,CAAiFC,UAAjF,CAA6FC,UAA7F,KAA+G,eAA/G,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,OAASC,kBAAT,KAAmC,4BAAnC,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGlB,UAAU,CAAC,SAAAmB,KAAK,QAAK,EAAL,EAAN,CAA5B,CAIA,QAASC,CAAAA,qBAAT,MAA4F,IAA3DC,CAAAA,QAA2D,MAA3DA,QAA2D,CAAjDC,QAAiD,MAAjDA,QAAiD,CAAvCC,IAAuC,MAAvCA,IAAuC,sBAAjCC,UAAiC,CAAjCA,UAAiC,0BAAtB,KAAsB,iBAAfC,WAAe,MAAfA,WAAe,CACxF,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,GAAMC,CAAAA,KAAK,CAAGlB,QAAQ,EAAtB,CACA,GAAM0B,CAAAA,QAAQ,CAAGvB,WAAW,EAA5B,CACA,GAAMwB,CAAAA,QAAQ,CAAGzB,WAAW,EAA5B,CAEA,GAAM0B,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,mBACI,KAAC,MAAD,EAAQ,EAAE,CAAE,CAAEC,QAAQ,CAAE,OAAZ,CAAqBC,KAAK,CAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBC,OAA/C,CAAwDC,UAAU,CAAEhB,KAAK,CAACa,OAAN,CAAcI,MAAd,CAAqBC,KAAzF,CAAZ,CAA8G,SAAS,CAAE,CAAzH,uBACI,MAAC,OAAD,yBACI,KAAC,UAAD,EAAY,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,CAAf,CAAkBC,UAAU,CAAE,GAA9B,CAAmCC,SAAS,CAAE,QAA9C,CAAhB,CAA0E,OAAO,CAAC,IAAlF,CAAuF,SAAS,CAAC,KAAjG,6BACiBpB,QADjB,GADJ,cAII,KAAC,UAAD,EACI,IAAI,CAAC,KADT,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAEI,WAHb,CAII,aAAW,OAJf,uBAMI,KAAC,SAAD,IANJ,EAJJ,GADJ,EADJ,CAiBH,CAlBD,CAoBA,mBACI,MAAC,MAAD,EACI,UAAU,CAAED,UADhB,CAEI,IAAI,CAAED,IAFV,CAGI,OAAO,CAAEE,WAHb,WAKKI,kBAAkB,EALvB,cAMI,KAAC,UAAD,EAAY,UAAU,CAAEL,UAAxB,CAAoC,IAAI,CAAER,kBAAkB,CAACK,QAAD,CAA5D,CAAwE,MAAM,CAAEC,QAAhF,EANJ,GADJ,CAUH,CAED,cAAeF,CAAAA,qBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@mui/styles';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Dialog, ListItemText, ListItem, List, Divider, AppBar, Toolbar, IconButton, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { categoryOptionsMap } from '../resources/constants.jsx';\nimport SearchList from '../components/SearchList';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nfunction CategoryOptionsDialog({ category, doSearch, open, fullScreen=false, handleClose }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const renderDialogHeader = () => {\n        return (\n            <AppBar sx={{ position: 'fixed', color: theme.palette.text.primary, background: theme.palette.common.white }} elevation={0}>\n                <Toolbar>\n                    <Typography sx={{ ml: 2, flex: 1, fontWeight: 600, textAlign: 'center' }} variant=\"h6\" component=\"div\">\n                        {`Select a ${category}`}\n                    </Typography>\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        onClick={handleClose}\n                        aria-label=\"close\"\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        );\n    };\n\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            onClose={handleClose}\n        >\n            {renderDialogHeader()}   \n            <SearchList fullScreen={fullScreen} list={categoryOptionsMap[category]} search={doSearch} /> \n      </Dialog>\n    );\n}\n\nexport default CategoryOptionsDialog;\n"]},"metadata":{},"sourceType":"module"}