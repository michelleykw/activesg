{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilityViewPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport data from './data/data.json';\nimport Typography from '@mui/material/Typography';\nimport Image from \"material-ui-image\";\nimport swimming from '../static/swimming.jpg';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: 'calc(100vh - 56px)'\n  }\n}));\n\nfunction FacilityViewPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const [facility, setFacility] = useState('');\n  const [sport, setSport] = useState('');\n  const [availability, setAvailability] = useState([]);\n\n  const getQuery = () => {\n    const newQuery = new URLSearchParams(location.search).get('location');\n    setFacility(newQuery);\n    console.log(facility);\n  };\n\n  const getAvailability = data => {\n    const currFacilityInfo = data.filter(data => data.name === facility);\n\n    if (currFacilityInfo[0]) {\n      setAvailability(currFacilityInfo[0]['availability']);\n    }\n\n    console.log(availability);\n  };\n\n  useEffect(() => {\n    console.log('get query');\n    getQuery();\n  }, []);\n  useEffect(() => {\n    console.log('get availability');\n    getAvailability(data);\n  }, [facility]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    className: classes.fullScreenHeight,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"img\",\n      sx: {\n        width: 1,\n        maxHeight: '150px'\n      },\n      src: swimming\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: [facility, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: [facility, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FacilityViewPage, \"dhbzXpxfgihtAib/Wc8SqS4/5bs=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = FacilityViewPage;\nexport default FacilityViewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityViewPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilityViewPage.jsx"],"names":["React","useEffect","useState","useParams","useLocation","useNavigate","makeStyles","Grid","data","Typography","Image","swimming","Box","useStyles","theme","fullScreenHeight","minHeight","FacilityViewPage","classes","location","facility","setFacility","sport","setSport","availability","setAvailability","getQuery","newQuery","URLSearchParams","search","get","console","log","getAvailability","currFacilityInfo","filter","name","width","maxHeight","ml"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport data from './data/data.json';\nimport Typography from '@mui/material/Typography';\nimport Image from \"material-ui-image\";\nimport swimming from '../static/swimming.jpg';\nimport Box from '@mui/material/Box';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: 'calc(100vh - 56px)'\n    }\n}));\n\nfunction FacilityViewPage() {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const [facility, setFacility] = useState('');\n    const [sport, setSport] = useState('');\n    const [availability, setAvailability] = useState([]);\n\n    const getQuery = () => {\n        const newQuery = new URLSearchParams(location.search).get('location');\n        setFacility(newQuery);\n        console.log(facility);\n    }\n\n    const getAvailability = (data) => {\n        const currFacilityInfo = data.filter(data => data.name === facility);\n        if (currFacilityInfo[0]) {\n            setAvailability(currFacilityInfo[0]['availability']);\n        }\n        console.log(availability);\n    }\n\n    useEffect(() => {\n        console.log('get query')\n        getQuery();\n    }, []);\n\n    useEffect(() => {\n        console.log('get availability')\n        getAvailability(data);\n    }, [facility]);\n\n    return (\n        <Grid container justifyContent=\"flex-start\" alignItems=\"center\" className={classes.fullScreenHeight}>\n            <Box\n                component=\"img\"\n                sx={{width: 1, maxHeight: '150px'}}\n                src={swimming} />\n            <Box sx={{ml:1}} >\n                <Typography variant=\"h3\">{facility} </Typography>\n            </Box>\n            <Box sx={{ml:1}} >\n                <Typography variant=\"caption\">{facility} </Typography>\n            </Box>\n\n        </Grid>\n    );\n}\n\nexport default FacilityViewPage;"]},"metadata":{},"sourceType":"module"}