{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/CalendarCardOld.jsx\";\nimport React from 'react';\nimport { sendNetworkLog } from '../logging/logging.js';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ScrollCalendarCardOld(_ref) {\n  let {\n    date,\n    selectedDate,\n    setSelectedDate,\n    setSelectedTime\n  } = _ref;\n  const currDate = date;\n  const day = new Date(date + ' 2022').toLocaleString('en-us', {\n    weekday: 'short'\n  });\n\n  const handleCalendarCardClick = currDate => {\n    setSelectedDate(currDate);\n    setSelectedTime('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        padding: '12px',\n        justifyContent: 'center'\n      },\n      style: {\n        border: \"none\",\n        boxShadow: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => handleCalendarCardClick(currDate),\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            padding: '0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: currDate.split(' ')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), currDate === selectedDate ? /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              background: 'black'\n            },\n            sx: {\n              borderBottomWidth: '5px',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '5px',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = ScrollCalendarCardOld;\nexport default ScrollCalendarCardOld;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollCalendarCardOld\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/CalendarCardOld.jsx"],"names":["React","sendNetworkLog","useNavigate","useLocation","Typography","Box","Divider","Card","CardContent","CardActionArea","ScrollCalendarCardOld","date","selectedDate","setSelectedDate","setSelectedTime","currDate","day","Date","toLocaleString","weekday","handleCalendarCardClick","padding","justifyContent","border","boxShadow","split","background","borderBottomWidth","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAGA,SAASC,qBAAT,OAAwF;AAAA,MAAxD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,YAAP;AAAqBC,IAAAA,eAArB;AAAsCC,IAAAA;AAAtC,GAAwD;AAEpF,QAAMC,QAAQ,GAAGJ,IAAjB;AACA,QAAMK,GAAG,GAAG,IAAIC,IAAJ,CAASN,IAAI,GAAG,OAAhB,EAAyBO,cAAzB,CAAwC,OAAxC,EAAiD;AAACC,IAAAA,OAAO,EAAC;AAAT,GAAjD,CAAZ;;AAEA,QAAMC,uBAAuB,GAAIL,QAAD,IAAc;AAE1CF,IAAAA,eAAe,CAACE,QAAD,CAAf;AACAD,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAACO,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAV;AAAuD,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA9D;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,MAAMJ,uBAAuB,CAACL,QAAD,CAAtD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,EAAE,EAAE;AAACM,YAAAA,OAAO,EAAE;AAAV,WAAjB;AAAA,kCACI,QAAC,UAAD;AAAA,sBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA,sBAAaD,QAAQ,CAACU,KAAT,CAAe,GAAf,EAAoB,CAApB;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGMV,QAAQ,KAAKH,YAAd,gBACG,QAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEc,cAAAA,UAAU,EAAE;AAAd,aAAhB;AAAyC,YAAA,EAAE,EAAE;AAAEC,cAAAA,iBAAiB,EAAE,KAArB;AAA4BC,cAAAA,KAAK,EAAE;AAAnC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADH,gBAEC,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEC,cAAAA,MAAM,EAAE,KAAV;AAAiBD,cAAAA,KAAK,EAAE;AAAxB;AAAT;AAAA;AAAA;AAAA;AAAA,kBALN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;;KA1BQlB,qB;AA4BT,eAAeA,qBAAf","sourcesContent":["import React from 'react';\nimport { sendNetworkLog } from '../logging/logging.js';\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\n\n\nfunction ScrollCalendarCardOld ({date, selectedDate, setSelectedDate, setSelectedTime}) {\n\n    const currDate = date;\n    const day = new Date(date + ' 2022').toLocaleString('en-us', {weekday:'short'})\n\n    const handleCalendarCardClick = (currDate) => {\n\n        setSelectedDate(currDate);\n        setSelectedTime('');\n    }\n\n    return (\n        <>\n            <Card sx={{padding: '12px', justifyContent: 'center'}} style={{ border: \"none\", boxShadow: \"none\" }}>\n                <CardActionArea onClick={() => handleCalendarCardClick(currDate)}>\n                    <CardContent sx={{padding: '0'}}>\n                        <Typography>{day}</Typography>\n                        <Typography>{currDate.split(' ')[0]}</Typography>\n                        {(currDate === selectedDate) ?\n                            <Divider style={{ background: 'black' }} sx={{ borderBottomWidth: '5px', width: '100%'}}/>\n                        : <Box sx={{ height: '5px', width: '100%'}}/>}\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </>\n    );\n}\n\nexport default ScrollCalendarCardOld;"]},"metadata":{},"sourceType":"module"}