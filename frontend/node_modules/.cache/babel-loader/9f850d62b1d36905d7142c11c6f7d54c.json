{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport swimming from '../static/swimming.jpg';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: \"100vh\"\n  }\n}));\n\nfunction ResultPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const [filteredData, setFilteredData] = useState([]);\n\n  const getQuery = () => {\n    return new URLSearchParams(location.search).get('query');\n  };\n\n  const filterData = () => {\n    const query = getQuery();\n    const tempData = data.filter(data => {\n      data.sport.includes(query) || data.name.includes(query);\n    });\n    setFilteredData(tempData);\n  };\n\n  const goToFacilityViewPage = loc => {\n    navigate(`/facilities/view?version=${versionId}&location=${loc}`);\n  };\n\n  const renderCard = data => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 220,\n        m: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => goToFacilityViewPage(data.name),\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"90\",\n          src: swimming,\n          alt: data.sport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: data.sport\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"caption\",\n            component: \"div\",\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: \"0.0km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.fullScreenHeight,\n    children: [filteredData && filteredData.map(item => renderCard(item)), !filteredData && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"There are no results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultPage, \"c8n1DUxCnEMvg0kcNoBo5Mwly/I=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/ResultPage.jsx"],"names":["React","useState","makeStyles","Grid","Typography","data","Card","CardContent","CardMedia","CardActionArea","swimming","useParams","useLocation","useNavigate","useStyles","theme","fullScreenHeight","minHeight","ResultPage","classes","location","navigate","versionId","URLSearchParams","search","get","filteredData","setFilteredData","getQuery","filterData","query","tempData","filter","sport","includes","name","goToFacilityViewPage","loc","renderCard","maxWidth","m","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport data from './data/data.json';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport swimming from '../static/swimming.jpg';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: \"100vh\"\n    }\n}));\n\nfunction ResultPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const [filteredData, setFilteredData] = useState([]);\n\n    const getQuery = () => {\n        return new URLSearchParams(location.search).get('query');\n    }\n\n    const filterData = () => {\n        const query = getQuery();\n        const tempData = data.filter((data) => {\n            data.sport.includes(query) || data.name.includes(query)\n        })\n        setFilteredData(tempData);\n    }\n\n    const goToFacilityViewPage = loc => {\n        navigate(`/facilities/view?version=${versionId}&location=${loc}`);\n    };\n\n    const renderCard = data => {\n        return (\n            <Card sx={{ maxWidth: 220, m:1}}>\n                <CardActionArea onClick={() => goToFacilityViewPage(data.name)}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"90\"\n                        src = {swimming}\n                        alt={data.sport}\n                    />\n                    <CardContent>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                        {data.sport}\n                    </Typography>\n                    <Typography gutterBottom variant=\"caption\" component=\"div\">\n                        {data.name}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                        0.0km\n                    </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        );\n    }\n\n    return (\n        <Grid container alignItems=\"center\" className={classes.fullScreenHeight}>\n            {/* <Typography>Oh no, the page canâ€™t be found</Typography> */}\n            {filteredData && filteredData.map(item => renderCard(item))}\n            {!filteredData && <Typography>There are no results found.</Typography>}\n        </Grid>\n    );\n}\n\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}