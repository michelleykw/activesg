{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilityViewPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport data from './data/data.json';\nimport { sendNetworkLog } from '../logging/logging.js';\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport swimming from '../static/swimming.jpg';\nimport HeaderSectionOld from '../components/FacilitiesViewHeaderOld';\nimport HeaderSectionNew from '../components/FacilitiesViewHeaderNew';\nimport ScrollCalendar from '../components/ScrollCalendar';\nimport TimeSlotsOld from '../components/TimeSlotsListOld';\nimport TimeSlotsNew from '../components/TimeSlotsListNew';\nimport YouMayAlsoLike from '../components/YouMayAlsoLike';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  fullScreenHeight: {\n    minHeight: 'calc(100vh - 56px)'\n  }\n}));\n\nfunction FacilityViewPage() {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [facility, setFacility] = useState('');\n  const [sport, setSport] = useState('');\n  const [area, setArea] = useState('');\n  const [availability, setAvailability] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('14 April');\n  const [timeSlots, setTimeSlot] = useState([]);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [showDrawer, setShowDrawer] = useState(false);\n  const versionId = new URLSearchParams(location.search).get('version') || 1;\n  const useOldResult = versionId == 2 || versionId == 4;\n\n  const getQuery = () => {\n    const newQuery = new URLSearchParams(location.search).get('location');\n    setFacility(newQuery);\n    console.log(facility);\n  };\n\n  const getAvailability = data => {\n    const currFacilityInfo = data.filter(data => data.name === facility);\n\n    if (currFacilityInfo[0]) {\n      setArea(currFacilityInfo[0]['area']);\n      setSport(currFacilityInfo[0]['sport']);\n      setAvailability(currFacilityInfo[0]['availability']);\n    }\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n  useEffect(() => {\n    getAvailability(data);\n  }, [facility]);\n  useEffect(() => {\n    let t = availability.filter(avail => avail['date'] === selectedDate);\n\n    if (t.length > 0) {\n      t = t[0]['time'];\n    }\n\n    setTimeSlot(t);\n  }, [selectedDate]);\n  useEffect(() => {\n    setShowDrawer(selectedTime != '');\n  }, [selectedTime]);\n\n  const DoneDrawer = () => {\n    const handleClick = () => {\n      sendNetworkLog('Clicked on: Done', 'Done Button', 'Selected Date: ' + selectedDate + '; ' + 'Selected Time: ' + selectedTime);\n      navigate(`/complete?version=${versionId}`);\n      localStorage.removeItem('recentSearchList');\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        elevation: \"10vh\",\n        variant: \"permanent\",\n        anchor: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handleClick(),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n      className: classes.fullScreenHeight,\n      columnSpacing: 0,\n      sx: {\n        mb: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          sx: {\n            width: 1,\n            maxHeight: '150px'\n          },\n          src: swimming\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          my: 2\n        },\n        children: [useOldResult && /*#__PURE__*/_jsxDEV(HeaderSectionOld, {\n          facility: facility,\n          sport: sport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 38\n        }, this), !useOldResult && /*#__PURE__*/_jsxDEV(HeaderSectionNew, {\n          area: area,\n          facility: facility,\n          sport: sport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\",\n          sx: {\n            width: 0.9\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(ScrollCalendar, {\n          dates: availability,\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          setSelectedTime: setSelectedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), !useOldResult && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\",\n          sx: {\n            width: 0.9\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [useOldResult && /*#__PURE__*/_jsxDEV(TimeSlotsOld, {\n            timeSlots: timeSlots,\n            selectedTime: selectedTime,\n            setSelectedTime: setSelectedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 42\n          }, this), !useOldResult && /*#__PURE__*/_jsxDEV(TimeSlotsNew, {\n            timeSlots: timeSlots,\n            selectedTime: selectedTime,\n            setSelectedTime: setSelectedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: !useOldResult && /*#__PURE__*/_jsxDEV(YouMayAlsoLike, {\n          data: data,\n          currFacilityName: facility,\n          useOldResult: useOldResult,\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          setSelectedTime: setSelectedTime,\n          dates: availability\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), showDrawer && /*#__PURE__*/_jsxDEV(DoneDrawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FacilityViewPage, \"41hxG5b8pUhgbk+v87UFgChURZU=\", false, function () {\n  return [useStyles, useLocation, useNavigate];\n});\n\n_c = FacilityViewPage;\nexport default FacilityViewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityViewPage\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/pages/FacilityViewPage.jsx"],"names":["React","useEffect","useState","useParams","useLocation","useNavigate","data","sendNetworkLog","makeStyles","Typography","Grid","Box","Divider","Drawer","Button","swimming","HeaderSectionOld","HeaderSectionNew","ScrollCalendar","TimeSlotsOld","TimeSlotsNew","YouMayAlsoLike","useStyles","theme","fullScreenHeight","minHeight","FacilityViewPage","classes","location","navigate","facility","setFacility","sport","setSport","area","setArea","availability","setAvailability","selectedDate","setSelectedDate","timeSlots","setTimeSlot","selectedTime","setSelectedTime","showDrawer","setShowDrawer","versionId","URLSearchParams","search","get","useOldResult","getQuery","newQuery","console","log","getAvailability","currFacilityInfo","filter","name","t","avail","length","DoneDrawer","handleClick","localStorage","removeItem","mb","width","maxHeight","my","flexGrow"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport data from './data/data.json';\nimport { sendNetworkLog } from '../logging/logging.js';\n\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\n\nimport swimming from '../static/swimming.jpg';\nimport HeaderSectionOld from '../components/FacilitiesViewHeaderOld';\nimport HeaderSectionNew from '../components/FacilitiesViewHeaderNew';\nimport ScrollCalendar from '../components/ScrollCalendar';\nimport TimeSlotsOld from '../components/TimeSlotsListOld';\nimport TimeSlotsNew from '../components/TimeSlotsListNew';\nimport YouMayAlsoLike from '../components/YouMayAlsoLike';\n\nconst useStyles = makeStyles(theme => ({\n    fullScreenHeight: {\n        minHeight: 'calc(100vh - 56px)'\n    }\n}));\n\nfunction FacilityViewPage() {\n    const classes = useStyles();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const [facility, setFacility] = useState('');\n    const [sport, setSport] = useState('');\n    const [area, setArea] = useState('');\n    const [availability, setAvailability] = useState([]);\n    const [selectedDate, setSelectedDate] = useState('14 April');\n    const [timeSlots, setTimeSlot] = useState([]);\n    const [selectedTime, setSelectedTime] = useState('');\n    const [showDrawer, setShowDrawer] = useState(false);\n\n    const versionId = new URLSearchParams(location.search).get('version') || 1;\n    const useOldResult = (versionId == 2) || (versionId == 4);\n\n    const getQuery = () => {\n        const newQuery = new URLSearchParams(location.search).get('location');\n        setFacility(newQuery);\n        console.log(facility);\n    }\n\n    const getAvailability = (data) => {\n        const currFacilityInfo = data.filter(data => data.name === facility);\n        if (currFacilityInfo[0]) {\n            setArea(currFacilityInfo[0]['area']);\n            setSport(currFacilityInfo[0]['sport']);\n            setAvailability(currFacilityInfo[0]['availability']);\n        }\n    }\n\n    useEffect(() => {\n        getQuery();\n    }, []);\n\n    useEffect(() => {\n        getAvailability(data);\n    }, [facility]);\n\n    useEffect(() => {\n        let t = availability.filter(avail => avail['date'] === selectedDate);\n        if (t.length > 0) {\n            t = t[0]['time'];\n        }\n        setTimeSlot(t);\n    }, [selectedDate])\n\n    useEffect(() => {\n        setShowDrawer(selectedTime != '');\n    }, [selectedTime])\n\n    const DoneDrawer = () => {\n\n        const handleClick = () => {\n            sendNetworkLog('Clicked on: Done', 'Done Button',\n            'Selected Date: ' + selectedDate + '; ' + 'Selected Time: ' + selectedTime);\n            navigate(`/complete?version=${versionId}`);\n            localStorage.removeItem('recentSearchList');\n        }\n\n        return (\n            <>\n                <Drawer elevation='10vh' variant='permanent' anchor='bottom'>\n                    <Button variant=\"contained\" onClick={() => handleClick()}>Done</Button>\n                </Drawer>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Grid container justifyContent=\"flex-start\" alignItems=\"flex-start\" className={classes.fullScreenHeight} columnSpacing={0} sx={{mb:10}}>\n                <Grid item xs={12}>\n                    <Box\n                        component=\"img\"\n                        sx={{width: 1, maxHeight: '150px'}}\n                        src={swimming} />\n                </Grid>\n\n                <Grid item xs={12} sx={{my: 2}}>\n                    {useOldResult && <HeaderSectionOld facility={facility} sport={sport}/>}\n                    {!useOldResult && <HeaderSectionNew area={area} facility={facility} sport={sport} />}\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider variant=\"middle\" sx={{width: 0.9}}/>\n                </Grid>\n\n                <Grid item xs={12} sx={{mb: 2}}>\n                    <ScrollCalendar dates={availability} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime} />\n                </Grid>\n\n                {!useOldResult && (\n                    <Grid item xs={12}>\n                        <Divider variant=\"middle\" sx={{width: 0.9}}/>\n                    </Grid>\n                )}\n\n                <Grid item xs={12}>\n                    <Box sx={{ flexGrow: 1 }}>\n                        {useOldResult && <TimeSlotsOld timeSlots={timeSlots} selectedTime={selectedTime} setSelectedTime={setSelectedTime} />}\n                        {!useOldResult && <TimeSlotsNew timeSlots={timeSlots} selectedTime={selectedTime} setSelectedTime={setSelectedTime} />}\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12}>\n                    {!useOldResult && (<YouMayAlsoLike data={data} currFacilityName={facility} useOldResult={useOldResult} selectedDate={selectedDate} setSelectedDate={setSelectedDate} setSelectedTime={setSelectedTime} dates={availability} /> )}\n                </Grid>\n            </Grid>\n            {showDrawer && <DoneDrawer/>}\n        </>\n    );\n}\n\nexport default FacilityViewPage;"]},"metadata":{},"sourceType":"module"}