{"ast":null,"code":"var _jsxFileName = \"/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/TimeSlotsListNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport TimeSlotCards from './TimeSlotCard';\nimport { CardActionArea } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TimeSlotsNew(_ref) {\n  _s();\n\n  let {\n    timeSlots,\n    selectedTime,\n    setSelectedTime\n  } = _ref;\n  const timePeriods = ['Morning', 'Afternoon', 'Evening'];\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState('Morning');\n\n  const clickTimePeriod = timePeriod => {\n    setSelectedTimePeriod(timePeriod);\n    console.log(selectedTimePeriod);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      sx: {\n        ml: 2\n      },\n      minHeight: \"50vh\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          inline: true,\n          align: \"left\",\n          gutterBottom: true,\n          variant: \"h6\",\n          sx: {\n            fontWeight: 600\n          },\n          children: \"Select a time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        children: timePeriods.map(item => /*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => {\n            clickTimePeriod(item);\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            style: {\n              color: item === selectedTimePeriod ? \"white\" : \"text.primary\"\n            },\n            sx: {\n              padding: '4px',\n              bgcolor: 'text.disabled',\n              borderRadius: 2,\n              m: 1\n            },\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"flex-start\",\n        justifyContent: \"flex-start\",\n        children: [timeSlots.length > 0 && timeSlots.filter(item => Object.values(item) > 0).map(item => /*#__PURE__*/_jsxDEV(TimeSlotCards, {\n          dataArr: item,\n          selectedTime: selectedTime,\n          setSelectedTime: setSelectedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 87\n        }, this)), timeSlots.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"There are no slots available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TimeSlotsNew, \"uF7NAKtcGTL7bL7YXb1V0/AKOnM=\");\n\n_c = TimeSlotsNew;\nexport default TimeSlotsNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSlotsNew\");","map":{"version":3,"sources":["/Users/kagurayuuki/Documents/AY202122/Sem2/CS4249 HCI/activesg/frontend/src/components/TimeSlotsListNew.jsx"],"names":["React","useEffect","useState","Grid","Typography","Box","TimeSlotCards","CardActionArea","TimeSlotsNew","timeSlots","selectedTime","setSelectedTime","timePeriods","selectedTimePeriod","setSelectedTimePeriod","clickTimePeriod","timePeriod","console","log","ml","mt","fontWeight","map","item","color","padding","bgcolor","borderRadius","m","length","filter","Object","values"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport TimeSlotCards from './TimeSlotCard';\nimport { CardActionArea } from '@mui/material';\n\nfunction TimeSlotsNew ({timeSlots, selectedTime, setSelectedTime}){\n\n    const timePeriods = ['Morning', 'Afternoon', 'Evening'];\n    const [selectedTimePeriod, setSelectedTimePeriod] = useState('Morning');\n\n    const clickTimePeriod = (timePeriod) => {\n        setSelectedTimePeriod(timePeriod);\n        console.log(selectedTimePeriod);\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" sx={{ml: 2}} minHeight='50vh'>\n                <Box sx={{mt: 1}}>\n                    <Typography inline align=\"left\" gutterBottom variant=\"h6\" sx={{fontWeight: 600}}>\n                        Select a time\n                    </Typography>\n                </Box>\n\n                <Grid direction=\"row\">\n                    {timePeriods.map(item => (\n                        <CardActionArea onClick={() => {clickTimePeriod(item)}}>\n                            <Typography\n                                variant=\"caption\"\n                                style={{color: (item === selectedTimePeriod) ? \"white\" : \"text.primary\"}}\n                                sx={{padding: '4px', bgcolor: 'text.disabled', borderRadius: 2, m: 1}}>\n                                {item}\n                            </Typography>\n                        </CardActionArea>\n                    ))}\n                </Grid>\n\n                <Grid container direction=\"row\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\n                    {timeSlots.length > 0 &&\n                        timeSlots.filter(item => Object.values(item) > 0).map(item => <TimeSlotCards dataArr={item} selectedTime={selectedTime} setSelectedTime={setSelectedTime}/>)}\n                    {timeSlots.length === 0 && <Typography>There are no slots available.</Typography>}\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default TimeSlotsNew;"]},"metadata":{},"sourceType":"module"}